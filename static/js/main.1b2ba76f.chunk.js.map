{"version":3,"sources":["components/ParsingOptions/ParsingOptions.module.scss","components/DataLoader/loaders/LoadProject.module.scss","components/DataLoader/loaders/UploadFile.module.scss","components/ChartSelector/ChartSelector.module.scss","components/InlineColorPicker/InlineColorPicker.module.scss","components/Header/Header.module.scss","components/ChartOptions/ChartOptions.module.scss","components/Section/Section.module.scss","components/Footer/Footer.module.scss","components/DataMapping/DataMapping.module.scss","components/DataGrid/DataGrid.module.scss","components/DataLoader/loaders/UrlFetch.module.scss","components/DataLoader/DataLoader.module.scss","HeaderItems.js","components/Header/Header.js","components/Section/Section.js","components/Footer/Footer.js","components/ScreenSizeAlert/ScreenSizeAlert.js","worker/index.js","hooks/useWindowSize.js","constants.js","worker/worker.js","hooks/useDataLoaderUtils/parser.js","hooks/useDataLoaderUtils/stack.js","hooks/useDataLoader.js","components/DataGrid/DataGrid.js","components/DataSamples/DataSamples.js","components/JsonViewer/JsonViewer.js","components/ParsingOptions/SeparatorSelector.js","components/ParsingOptions/ThousandsSeparatorSelector.js","components/ParsingOptions/DecimalsSeparatorSelector.js","components/ParsingOptions/DateLocaleSelector.js","components/ParsingOptions/StackSelector.js","components/ParsingOptions/ParsingOptions.js","charts.js","import_export_v1.js","import_export_v1.1.js","components/DataLoader/loaders/LoadProject.js","components/DataLoader/loaders/Paste.js","components/DataLoader/loaders/UploadFile.js","components/DataLoader/loaders/UrlFetch.js","components/DataLoader/loading.js","components/WarningMessage/WarningMessage.js","components/DataLoader/DataMismatchModal.js","components/DataLoader/DataLoader.js","components/ChartSelector/ChartSelector.js","components/DataMapping/ColumnCard.js","components/DataMapping/DataTypeIcon.js","components/DataMapping/asterisk.svg","components/DataMapping/RequiredIcon.js","components/DataMapping/ChartDimensionItem.js","components/DataMapping/ChartDimensionCard.js","components/DataMapping/DataMapping.js","components/ChartOptions/ChartOptionTypes/ChartOptionSelect.js","components/ChartOptions/ChartOptionTypes/ChartOptionNumber.js","components/ChartOptions/ChartOptionTypes/ChartOptionText.js","components/InlineColorPicker/InlineColorPicker.js","components/ChartOptions/ChartOptionTypes/ChartOptionColor.js","components/ChartOptions/ChartOptionTypes/ColorSchemePreview.js","components/ChartOptions/ChartOptionTypes/ColorSchemesDropDown.js","components/ChartOptions/ChartOptionTypes/ColorScaleUtils.js","hooks/usePrevious.js","components/ChartOptions/ChartOptionTypes/ChartOptionColorScale.js","components/ChartOptions/ChartOptionTypes/ChartOptionColorScaleDefault.js","components/ChartOptions/ChartOptionTypes/ChartOptionColorScaleWrapper.js","components/ChartOptions/ChartOptionTypes/ChartOptionBoolean.js","components/ChartOptions/ChartOptions.js","components/ChartPreview/ChartPreview.js","hooks/useDebounce.js","components/ChartPreviewWIthOptions/ChartPreviewWithOptions.js","components/Exporter/Exporter.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","headerItems","label","slug","href","Header","menuItems","Navbar","bg","expand","sticky","className","styles","navbar","Brand","Toggle","aria-controls","Collapse","id","Nav","map","d","i","Link","key","role","target","rel","Section","props","Container","fluid","section","join","Row","Col","title","loading","Spinner","animation","variant","style","width","height","borderWidth","marginLeft","children","Footer","backgroundColor","footer","xs","sm","span","order","lg","offset","md","xl","ScreenSizeAlert","parsingWorker","mappingWorker","size","useState","undefined","windowSize","setWindowSize","useEffect","handleResize","window","innerWidth","innerHeight","addEventListener","removeEventListener","useWindowSize","showModal","setShowModal","modalWasClosed","setModalWasClosed","handleClose","Modal","show","onHide","backdrop","keyboard","aria-labelledby","centered","closeButton","Title","as","aria-label","Body","Button","onClick","DateIcon","BsClock","NumberIcon","BsHash","StringIcon","BsType","dataTypeIcons","date","number","string","localeList","arEG","caES","csCZ","daDK","deCH","deDE","enCA","enGB","enUS","esES","esMX","faIR","fiFI","frCA","frFR","heIL","huHU","itIT","jaJP","koKR","mkMK","nbNO","nlNL","plPL","ptBR","ruRU","svSE","ukUA","zhCN","zhTW","separatorsLabels","separatorsList","Object","keys","AGGREGATIONS_LABELS","SCALES_LABELS","COLOR_SCHEMES_LABELS","Worker","PARSERS","dataType","parse","dataString","JSON","opts","separator","dsvFormat","candidates","replace","parsed","length","push","score","e","sort","a","b","parseAndCheckData","trimmedDataString","trim","parser","extra","parseData","data","isScalarType","item","includes","stackData","column","flatMap","record","others","omit","value","prop","DATA_LOADER_MODE","__cache","useDataLoader","userInput","setUserInput","dataSource","setDataSource","userData","setUserData","userDataType","setUserDataType","parseError","setParserError","unstackedInfo","setUnstackedInfo","setSeparator","thousandsSeparator","setThousandsSeparator","decimalsSeparator","setDecimalsSeparator","navigator","language","locale","setLocale","stackDimension","setStackDimension","setData","unstackedData","unstackedColumns","setLoading","mode","setMode","replaceRequiresConfirmation","setReplaceRequiresConfirmation","columnsTypes","dataTypes","parseDatasetAsyncAndSetData","useCallback","parsingOptions","terminate","err","Comlink","parseDataset","parseDatasetInWorker","dateLocale","get","then","resultData","catch","console","log","finally","parseDatasetSyncAndSetData","Promise","resolve","reject","parseDatasetAuto","parseDatasetAndSetData","reset","hydrateFromSavedProject","project","handleReplacingData","decimal","group","newDataInferred","errors","replacedData","oldColNames","newColNames","missingCols","difference","nextDataTypes","newData","stackedData","handleNewUserData","nextUserData","error","setUserDataAndDetect","str","source","options","parsedUserData","setJsonData","normalized","element","iterateElement","Array","isArray","tmp","forEach","outElement","property","valueType","filter","nestedProperty","nestedValue","startDataReplace","cancelDataReplace","commitDataReplace","newSeparator","newThousandsSeparator","newDecimalSeparator","newLocale","dataset","coerceTypes","nextTypes","loadSample","rawData","sampleSeparator","type","handleInlineEdit","newDataset","handleStackOperation","resetDataLoader","dataLoaderMode","DATE_FORMATS","dateFormats","DateFormatSelector","React","forwardRef","ref","currentFormat","onChange","classNames","S","dateFmt","selected","stopPropagation","preventDefault","dateFormat","DataTypeSelector","typeDescriptor","currentType","onTypeChange","currentTypeComplete","dataTypeIconDomRef","useRef","showPicker","setShowPicker","handleTypeChange","newType","datatype","isEqual","handleTypeChangeDate","handleTargetClick","Icon","Overlay","current","placement","rootClose","rootCloseEvent","container","document","body","scheduleUpdate","arrowProps","outOfBoundaries","data-datatype","OverlayTrigger","overlay","trigger","triggerHandler","marginRight","fill","HeaderRenderer","sortColumn","sortDirection","_raw_datatype","_raw_coerceType","name","DataGrid","userDataset","onDataUpdate","setSort","keyedErrors","useMemo","keyBy","containerEl","idColumnWidth","Math","floor","log10","equalDinstribution","getBoundingClientRect","columnWidth","max","columns","headerRenderer","frozen","sortable","k","editable","formatter","row","_errors","toString","nextType","resizable","sortedDataset","datasetWithIds","_id","_stage3","sortColumnType","getTypeName","valueOf","localeCompare","reverse","handleSort","columnKey","direction","minColumnWidth","rows","rowHeight","onSort","onColumnResize","onRowsUpdate","update","action","fromRow","cellKey","updated","samplesList","category","url","delimiter","DataSamples","onSampleReady","setLoadingError","select","sample","fetch","response","message","text","marginBottom","Card","Subtitle","JsonViewerRecursive","contextName","nestingLevel","context","selectFilter","onSelect","isSelectable","contextType","mouseOver","setMouseOver","classes","handleSelect","handleMouseOver","handleMouseOut","onMouseOver","onMouseOut","JsonViewer","SeparatorSelector","inputValue","handleChange","nextValue","formatValue","Dropdown","Menu","Item","ThousandsSeparatorSelector","DecimalsSeparatorSelector","DateLocaleSelector","StackSelector","list","nextDimension","disabled","ParsingOptions","refreshData","onDataRefreshed","nextSeparator","nextLocale","color","dimensions","nextStackDimension","charts","alluvialdiagram","arcdiagram","barchart","barchartmultiset","barchartstacked","beeswarm","boxplot","bubblechart","bumpchart","circlepacking","circularDendrogram","contourPlot","convexHull","dendrogram","hexagonalBinning","linechart","matrixplot","radarchart","sankeydiagram","streamgraph","sunburst","treemap","violinplot","ganttChart","VERSION","serializeProject","currentChart","mapping","visualOptions","listOfObjects","version","userInputFormat","obj","col","parseOptions","chart","metadata","getOrError","object","path","has","Error","deserializeProject","matrix","chartName","find","c","chartId","DESERIALIZERS","IO1","IO1_1","LoadProject","onProjectSelected","onDrop","acceptedFiles","reader","FileReader","serializedProject","result","readAsText","useDropzone","accept","maxFiles","getRootProps","getInputProps","isDragReject","isDragAccept","dropzone","Paste","border","borderRadius","padding","minHeight","UploadFile","UrlFetch","setUrl","fetchUrl","Loading","WarningMessage","Alert","DataMismatchModal","startsWith","split","memo","mainContent","hydrateFromProject","loadingError","loader","rawInput","icon","BsClipboard","allowedForReplace","BsUpload","BsGift","BsCloud","BsSearch","BsFolder","optionIndex","setOptionIndex","selectedOption","ctx","reloadRAW","location","pathname","opt","classnames","active","successRows","parsingErrors","filterCharts","categories","indexOf","availableCharts","setCurrentChart","setFilter","handleFilterChange","nextFilter","nextCharts","charAt","toUpperCase","slice","uniq","flat","Img","src","thumbnail","Text","description","code","tutorial","backgroundImage","whiteSpace","ColumnCard","dimensionName","dimensionType","commitLocalMapping","rollbackLocalMapping","useDrag","collect","monitor","isDragging","end","dropResult","didDrop","drag","dimType","DataTypeIcon","Tooltip","_extends","assign","arguments","prototype","hasOwnProperty","call","apply","this","_objectWithoutProperties","excluded","sourceKeys","_objectWithoutPropertiesLoose","getOwnPropertySymbols","sourceSymbolKeys","propertyIsEnumerable","createElement","_ref","svgRef","viewBox","ForwardRef","RequiredIcon","ChartDimensionItem","draggingColumn","index","isValid","columnId","dimension","aggregators","relatedAggregation","onMove","onChangeAggregation","onDeleteItem","onChangeDimension","replaceDimension","onInsertColumn","localMappding","useDrop","isOver","getItem","hover","multiple","hoverIndex","dimensionId","dragIndex","hoverBoundingRect","hoverMiddleY","bottom","top","hoverClientY","getClientOffset","y","drop","opacity","aggregation","aggregatorName","getAggregatorNames","emptyList","ChartDimensionCard","setMapping","draggingId","setDraggingId","defaulAggregation","getDefaultDimensionAggregation","columnDataType","validTypes","ids","concat","uniqueId","mappedType","config","setAggregation","newAggregations","idsMappedHere","columnsMappedHere","aggregationsMappedHere","nextConfig","j","newCol","arrayMove","nextId","arrayInsert","t","required","renderId","removeIndex","arrayReplace","arr","handleReplaceLocalMapping","prev","fromDimension","toDimension","fromIndex","toIndex","removedItem","newAggregation","moveFn","prevToMapping","toDimensionMapping","setLocalMapping","updateMapping","mappingConf","isLocal","lastMapping","useImperativeHandle","clearLocalMapping","DndProvider","backend","HTML5Backend","columnName","defaultValue","default","stringValue","Number","option","isObject","isEnabled","step","min","n","parseFloat","isNaN","placeholder","InlineColorPicker","maybeColor","displayColorPicker","setDisplayColorPicker","swatch","background","popover","cover","disableAlpha","onChangeComplete","hex","samples","scale","numSamples","ticks","domain","flex","interpolators","interpolator","setInterpolator","colorDataset","colorDataType","scaleType","currentFinalScale","paddingRight","intrplr","colorPresets","getPresetScale","getColorDomain","ResetBtn","resetScale","InvertBtn","invertScale","LockBtn","handleChangeLocked","locked","usePrevious","getDatePickerValue","userValue","userDomain","getValueType","toISOString","substring","ChartOptionColorScale","mappingValue","mappedData","hasAnyMapping","initialValue","__loaded","setScaleType","defaultColor","colorFromDefault","setLocked","availableScaleTypes","getAvailableScaleTypes","setInterpolators","userRange","range","userValues","setUserValues","getCurrentFinalScale","userValuesForFinalScale","x","getColorScale","getDefaultUserValues","getInitialScaleValues","getUserValuesForFinalScale","values","currentUserValues","valuesForFinalScale","getDefaultColorScale","handleChangeValues","nextUserValues","userScaleValues","setUserValueRange","newUserValues","setUserValueDomain","handleChangeScaleType","nextScaleType","nextInterpolators","nextInterpolator","handleSetInterpolator","customUserValues","byDomain","v","nextLocked","reversedValues","invertedValues","prevMappingValue","marginTop","s","Date","ChartOptionColorScaleDefault","colorFromValue","setDefaultColor","handleChangeDefaultColor","nextDefaultColor","outScaleParams","ChartOptionColorScaleWrapper","optionId","Form","Check","checked","CHART_OPTION_COMPONENTS","ChartOptionNumber","ChartOptionText","ChartOptionColor","colorScale","boolean","ChartOptionBoolean","getPartialMapping","repeatIndex","nv","getPartialMappedData","datum","getDefaultForRepeat","def","repeatDefault","WrapControlComponent","setVisualOptions","Component","remainingOptions","stringify","domainFromChart","handleControlChange","newValue","Fragment","ChartOptions","optionsConfig","getOptionsConfig","groups","collapseStatus","setCollapseStatus","enabledOptions","getEnabledOptions","optionsDefinitionsByGroup","reduce","acc","containerOptions","defaultOptionsValues","getDefaultOptionsValues","getContainerOptions","groupName","groupname","repeatFor","showLegend","setError","setRawViz","domRef","vizOptionsDebounced","delay","debouncedValue","setDebouncedValue","handler","setTimeout","clearTimeout","useDebounce","currentlyMapped","variable","requiredVariables","errorMessage","curr","firstChild","removeChild","multivaluesVariables","minValues","variableObj","viz","rawChart","rawViz","renderToDOM","ChartPreviewWithOptions","setMappingLoading","setMappedData","mapData","mapDataInWorker","downloadBlob","filename","download","click","Exporter","exportProject","downloadSvg","svgString","XMLSerializer","serializeToString","_node","DOMURL","URL","webkitURL","svg","Blob","createObjectURL","revokeObjectURL","downloadImage","format","canvas","clientHeight","clientWidth","getContext","img","Image","onload","drawImage","toDataURL","downloadProject","blob","setCurrentFormat","currentFile","setCurrentFile","downloadViz","InputGroup","DropdownButton","Append","App","dataLoader","mappingLoading","dataMappingRef","columnNames","prevColumnNames","handleChartChange","nextChart","serializeProjectV1_1","importProject","patchedOptions","isPlainObject","HeaderItems","buttonText","buttonStyle","fontSize","buttonClasses","acceptOnScroll","Boolean","hostname","match","ReactDOM","render","StrictMode","getElementById","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.1b2ba76f.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"parsingOptions\":\"ParsingOptions_parsingOptions__K4kyV\",\"refresh-button\":\"ParsingOptions_refresh-button__3TkLa\",\"separator-preview\":\"ParsingOptions_separator-preview__1UuQv\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"dropzone\":\"LoadProject_dropzone__6a5Ft\",\"reject\":\"LoadProject_reject__1NjN5\",\"accept\":\"LoadProject_accept__1a3qM\",\"browse-button\":\"LoadProject_browse-button__Kvg8t\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"dropzone\":\"UploadFile_dropzone__1h-vB\",\"reject\":\"UploadFile_reject__2Kpgt\",\"accept\":\"UploadFile_accept__3mK1X\",\"browse-button\":\"UploadFile_browse-button__2AUZ1\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"thumbnail\":\"ChartSelector_thumbnail__1xQ_-\",\"currentChart\":\"ChartSelector_currentChart__NKILM\",\"disabled\":\"ChartSelector_disabled__MRXKu\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"swatch\":\"InlineColorPicker_swatch__11WDP\",\"color\":\"InlineColorPicker_color__12j-E\",\"popover\":\"InlineColorPicker_popover__3Hchl\",\"cover\":\"InlineColorPicker_cover__2KTIs\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"navbar\":\"Header_navbar__359Kr\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"chart-options\":\"ChartOptions_chart-options__3l80N\",\"chart-option\":\"ChartOptions_chart-option__AxfdW\",\"color-swatch\":\"ChartOptions_color-swatch__2yOSf\",\"color-scale-item\":\"ChartOptions_color-scale-item__3Rhfd\",\"ordinal\":\"ChartOptions_ordinal__2mFUI\",\"not-ordinal\":\"ChartOptions_not-ordinal__3DrFs\",\"color-swatches-list\":\"ChartOptions_color-swatches-list__2EQnZ\",\"options-group\":\"ChartOptions_options-group__3Zauh\",\"group-header\":\"ChartOptions_group-header__1X0bJ\",\"collapsed\":\"ChartOptions_collapsed__pl7d6\",\"collapse-button\":\"ChartOptions_collapse-button__rUqFX\",\"color-scheme-dropdown-item\":\"ChartOptions_color-scheme-dropdown-item__1zRUD\",\"scheme-preview\":\"ChartOptions_scheme-preview__f1lz2\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"section\":\"Section_section__2mYr1\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"footer\":\"Footer_footer__7dIj9\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"column-card\":\"DataMapping_column-card__2VBWp\",\"column-title\":\"DataMapping_column-title__2yLXi\",\"data-type-icon\":\"DataMapping_data-type-icon__fdfcN\",\"chart-dimension\":\"DataMapping_chart-dimension__2tNga\",\"chart-dimension-header\":\"DataMapping_chart-dimension-header__3FrwJ\",\"accepted-type-icon\":\"DataMapping_accepted-type-icon__3XRr1\",\"dimension-required\":\"DataMapping_dimension-required__1FreW\",\"assigned-column\":\"DataMapping_assigned-column__3S8Vu\",\"column-valid\":\"DataMapping_column-valid__1wlKa\",\"column-invalid\":\"DataMapping_column-invalid__3g-BT\",\"remove-assigned\":\"DataMapping_remove-assigned__3VE_f\",\"dropzone\":\"DataMapping_dropzone__2L06t\",\"active\":\"DataMapping_active__NdQHM\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"data-type-selector\":\"DataGrid_data-type-selector__2on-B\",\"data-type-selector-item\":\"DataGrid_data-type-selector-item__3xB1K\",\"selected\":\"DataGrid_selected__iVbJn\",\"date-format-preview\":\"DataGrid_date-format-preview__f5V3s\",\"data-type-selector-trigger\":\"DataGrid_data-type-selector-trigger__1yAyi\",\"date-format-selector\":\"DataGrid_date-format-selector__19SHO\",\"date-format-selector-entry\":\"DataGrid_date-format-selector-entry__3kPs-\",\"parent-type-selector\":\"DataGrid_parent-type-selector__8RCk2\",\"column-name\":\"DataGrid_column-name__q_QPq\",\"has-error\":\"DataGrid_has-error__jgPR1\",\"raw-col-header\":\"DataGrid_raw-col-header__2fXsy\",\"unsorted\":\"DataGrid_unsorted__2dx3u\",\"acs\":\"DataGrid_acs__-kgxx\",\"desc\":\"DataGrid_desc__2WpaO\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"url-input\":\"UrlFetch_url-input__3vKK2\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"loading-option\":\"DataLoader_loading-option__Spa1h\",\"disabled\":\"DataLoader_disabled__3RVvn\",\"active\":\"DataLoader_active__-mHU8\",\"start-over\":\"DataLoader_start-over__3fWNA\",\"cancel\":\"DataLoader_cancel__22q8c\",\"loading-component\":\"DataLoader_loading-component__1zOap\",\"bg-animated\":\"DataLoader_bg-animated__1j4Qa\",\"bg-animation\":\"DataLoader_bg-animation__12elS\"};","const headerItems = [\n  {\n    label: 'About',\n    slug: 'about',\n    href: 'https://rawgraphs.io/about',\n  },\n  // {\n  //   label: 'Gallery',\n  //   slug: 'gallery',\n  //   href: 'https://rawgraphs.io/gallery',\n  // },\n  // {\n  //   label: 'Learning',\n  //   slug: 'learning',\n  //   href: 'https://rawgraphs.io/learning',\n  // },\n  // {\n  //   label: 'FAQs',\n  //   slug: 'faqs',\n  //   href: 'https://github.com/rawgraphs/raw/wiki/FAQs',\n  // },\n  // {\n  //   label: \"RAWGraphs 1.3\",\n  //   slug: 'rawgraphs-1-3',\n  //   href: 'https://app.rawgraphs.io',\n  // },\n  {\n    label: 'GitHub',\n    slug: 'github',\n    href: 'https://github.com/rawgraphs/rawgraphs-app',\n  },\n]\n\nexport default headerItems\n","import React from 'react'\nimport styles from './Header.module.scss'\nimport { Navbar, Nav } from 'react-bootstrap'\n\nexport default function Header({ menuItems }) {\n  return (\n    <Navbar bg=\"white\" expand=\"lg\" sticky=\"top\" className={styles.navbar}>\n      <Navbar.Brand href=\"/\"><b>RAW</b><span className=\"text-primary\">Graphs</span> 2.0 beta</Navbar.Brand>\n      <Navbar.Toggle aria-controls=\"basic-navbar-nav\" />\n      <Navbar.Collapse id=\"basic-navbar-nav\">\n        <Nav className=\"ml-auto\">\n          {menuItems.map((d, i) => {\n            return (\n              <Nav.Link key={'item' + i} href={d.href}>\n                {d.label}\n              </Nav.Link>\n            )\n          })}\n          <a\n            role=\"button\"\n            href=\"https://github.com/rawgraphs/rawgraphs-app/issues\"\n            target=\"_blank\"\n            rel=\"noopener noreferrer\"\n            className=\"btn btn-sm btn-primary ml-2 d-flex flex-column align-items-center justify-content-center\"\n          >\n            Report issue\n          </a>\n        </Nav>\n      </Navbar.Collapse>\n    </Navbar>\n  )\n}\n","import React from 'react'\nimport styles from './Section.module.scss'\nimport { Container, Row, Col, Spinner } from 'react-bootstrap'\n\nexport default function Section(props) {\n  return (\n    <Container\n      fluid\n      className={\n        [styles.section, props.className].join(' ')\n      }\n    >\n      <Row>\n        <Col>\n          <div className=\"d-flex align-items-center mb-3\">\n            <h1>{props.title}</h1>\n            { props.loading && <Spinner animation=\"border\" variant=\"primary\" style={{width:'2rem', height:'2rem',borderWidth:'2px',marginLeft:'2rem'}} />}\n          </div>\n          \n          {props.children}\n        </Col>\n      </Row>\n    </Container>\n  )\n}\n","import React from 'react'\nimport styles from './Footer.module.scss'\nimport { Row, Col, Container } from 'react-bootstrap'\nimport { BsFillEnvelopeFill, BsBarChartFill } from 'react-icons/bs'\nimport { FaTwitter, FaGithub } from 'react-icons/fa'\n\n// #TODO add commit hash\n// const commitHash = process.env.REACT_APP_VERSION || 'dev'\n\nexport default function Footer(props) {\n  return (\n    <Container fluid style={{ backgroundColor: 'var(--dark)' }}>\n      <Container className={styles.footer}>\n        <Row>\n          <Col xs={6} sm={{ span: 5, order: 1 }} lg={{ span: 3, order: 1 }}>\n            <p className=\"Xsmall\">\n              RAWGraphs is an open source project designed and developed by{' '}\n              <a\n                href=\"http://densitydesign.org/\"\n                target=\"_blank\"\n                rel=\"noopener noreferrer\"\n              >\n                DensityDesign\n              </a>\n              ,{' '}\n              <a\n                href=\"https://calib.ro/\"\n                target=\"_blank\"\n                rel=\"noopener noreferrer\"\n              >\n                Calibro\n              </a>{' '}\n              and{' '}\n              <a\n                href=\"https://inmagik.com/\"\n                target=\"_blank\"\n                rel=\"noopener noreferrer\"\n              >\n                Inmagik\n              </a>\n              .\n              <br />© 2013-2021{' '}\n              <a href=\"https://raw.github.com/rawgraphs/rawgraphs-app/master/LICENSE\">\n                (Apache License 2.0)\n              </a>\n            </p>\n          </Col>\n          <Col xs={6} sm={{ span: 5, order: 3 }} lg={{ span: 3, order: 1 }}>\n            <p className=\"Xsmall\"></p>\n          </Col>\n          {/* <Col xs={6} sm={{span:5, order:3}} lg={{span:3,order:1}}><p className=\"Xsmall\">This <span title={commitHash}>version</span> is intended to be available only for the backers of the crowdfunding campaign.</p></Col> */}\n          <Col\n            xs={6}\n            sm={{ span: 6, offset: 1, order: 2 }}\n            md={{ span: 3 }}\n            lg={{ offset: 0 }}\n            xl={{ span: 2, offset: 2 }}\n          >\n            <p>\n              <BsFillEnvelopeFill /> hello at rawgraphs.io\n            </p>\n            <p>\n              <FaTwitter />{' '}\n              <a\n                href=\"https://twitter.com/rawgraphs\"\n                target=\"_blank\"\n                rel=\"noopener noreferrer\"\n              >\n                @rawgraphs\n              </a>\n            </p>\n          </Col>\n          <Col\n            xs={6}\n            sm={{ span: 6, offset: 1, order: 4 }}\n            md={{ span: 2 }}\n            lg={{ offset: 0 }}\n            xl={{ span: 2, offset: 0 }}\n          >\n            <p>\n              <FaGithub />{' '}\n              <a\n                href=\"https://github.com/rawgraphs\"\n                target=\"_blank\"\n                rel=\"noopener noreferrer\"\n              >\n                Github\n              </a>\n            </p>\n            <p>\n              <BsBarChartFill />{' '}\n              <a\n                href=\"https://old.rawgraphs.io\"\n                target=\"_blank\"\n                rel=\"noopener noreferrer\"\n              >\n                RAWGraphs v.1\n              </a>\n            </p>\n          </Col>\n        </Row>\n      </Container>\n    </Container>\n  )\n}\n","import React, { useState, useEffect } from 'react'\nimport useWindowSize from '../../hooks/useWindowSize'\nimport { Modal, Button } from 'react-bootstrap'\nimport { BsEnvelopeFill } from 'react-icons/bs'\n\n// import styles from './ScreenSizeAlert.module.scss'\n\nfunction ScreenSizeAlert() {\n  const size = useWindowSize()\n  const [showModal, setShowModal] = useState(size.width < 992)\n  const [modalWasClosed, setModalWasClosed] = useState(false)\n\n  const handleClose = () => {\n    setShowModal(false)\n    setModalWasClosed(true)\n  }\n\n  useEffect(() => {\n    if (modalWasClosed === false) {\n      setShowModal(size.width < 992)\n    }\n  }, [modalWasClosed, size])\n\n  return (\n    <Modal\n      className=\"raw-modal\"\n      show={showModal}\n      onHide={handleClose}\n      backdrop=\"static\"\n      keyboard={false}\n      // size=\"lg\"\n      aria-labelledby=\"contained-modal-title-vcenter\"\n      centered\n    >\n      <Modal.Header closeButton>\n        <Modal.Title as=\"h5\">\n          <span role=\"img\" aria-label=\"Party icon\">\n            🎉\n          </span>{' '}\n          Welcome to the new RAWGraphs!\n        </Modal.Title>\n      </Modal.Header>\n      <Modal.Body>\n        <p className=\"big\">\n          RAWGraphs 2.0 is designed for {size.width >= 768 ? 'slightly ' : ' '}\n          bigger screens!\n        </p>\n        <p>\n          Resize your browser window or{' '}\n          <a href=\"mailto:?subject=Visit+RAWGraphs+2.0&body=Hello%21%0D%0APlease+do+not+forget+to+take+a+look+at+the+new+version+of+RAWGraphs%21%0D%0A%0D%0AVisit%3A+https%3A%2F%2Fdev.rawgraphs.io%2F%0D%0A%0D%0ASee+you+later%2C%0D%0AThe+RAWGraphs+Team\">\n            <BsEnvelopeFill /> send yourself a reminder\n          </a>{' '}\n          to come back at a better time.\n        </p>\n        <p>Touch devices are not fully supported yet.</p>\n      </Modal.Body>\n      <Modal.Footer>\n        <Button variant=\"primary\" onClick={handleClose}>\n          Got it!\n        </Button>\n      </Modal.Footer>\n    </Modal>\n  )\n}\n\nexport default ScreenSizeAlert\n","import * as Comlink from 'comlink'\n/* eslint-disable import/no-webpack-loader-syntax */\nimport Worker from 'worker-loader!./worker'\n\nlet parsingWorker // = new Worker()\n\nexport function parseDatasetInWorker(data, dataTypes, parsingOptions) {\n  try {\n    parsingWorker.terminate()\n  } catch (err) {}\n  parsingWorker = new Worker()\n  let obj = Comlink.wrap(parsingWorker)\n  let out = obj.parseDataset(data, dataTypes, parsingOptions)\n  return out\n}\n\nlet mappingWorker // = new Worker()\n\nexport function mapDataInWorker(\n  chartName,\n  { data, mapping, visualOptions, dataTypes }\n) {\n  try {\n    mappingWorker.terminate()\n  } catch (err) {}\n  mappingWorker = new Worker()\n  let obj = Comlink.wrap(mappingWorker)\n  let out = obj.mapData(chartName, { data, mapping, visualOptions, dataTypes })\n  return out\n}\n","import { useEffect, useState } from 'react'\n\n// Hook\nexport default function useWindowSize() {\n  // Initialize state with undefined width/height so server and client renders match\n  // Learn more here: https://joshwcomeau.com/react/the-perils-of-rehydration/\n  const [windowSize, setWindowSize] = useState({\n    width: undefined,\n    height: undefined,\n  });\n\n  useEffect(() => {\n    // Handler to call on window resize\n    function handleResize() {\n      // Set window width/height to state\n      setWindowSize({\n        width: window.innerWidth,\n        height: window.innerHeight,\n      });\n    }\n    \n    // Add event listener\n    window.addEventListener(\"resize\", handleResize);\n    \n    // Call handler right away so state gets updated with initial window size\n    handleResize();\n    \n    // Remove event listener on cleanup\n    return () => window.removeEventListener(\"resize\", handleResize);\n  }, []); // Empty array ensures that effect is only run on mount\n\n  return windowSize;\n}\n\n","// import React from \"react\"\nimport { BsClock, BsHash, BsType } from 'react-icons/bs'\nimport arEG from 'd3-time-format/locale/ar-EG.json'\nimport caES from 'd3-time-format/locale/ca-ES.json'\nimport csCZ from 'd3-time-format/locale/cs-CZ.json'\nimport daDK from 'd3-time-format/locale/da-DK.json'\nimport deCH from 'd3-time-format/locale/de-CH.json'\nimport deDE from 'd3-time-format/locale/de-DE.json'\nimport enCA from 'd3-time-format/locale/en-CA.json'\nimport enGB from 'd3-time-format/locale/en-GB.json'\nimport enUS from 'd3-time-format/locale/en-US.json'\nimport esES from 'd3-time-format/locale/es-ES.json'\nimport esMX from 'd3-time-format/locale/es-MX.json'\nimport faIR from 'd3-time-format/locale/fa-IR.json'\nimport fiFI from 'd3-time-format/locale/fi-FI.json'\nimport frCA from 'd3-time-format/locale/fr-CA.json'\nimport frFR from 'd3-time-format/locale/fr-FR.json'\nimport heIL from 'd3-time-format/locale/he-IL.json'\nimport huHU from 'd3-time-format/locale/hu-HU.json'\nimport itIT from 'd3-time-format/locale/it-IT.json'\nimport jaJP from 'd3-time-format/locale/ja-JP.json'\nimport koKR from 'd3-time-format/locale/ko-KR.json'\nimport mkMK from 'd3-time-format/locale/mk-MK.json'\nimport nbNO from 'd3-time-format/locale/nb-NO.json'\nimport nlNL from 'd3-time-format/locale/nl-NL.json'\nimport plPL from 'd3-time-format/locale/pl-PL.json'\nimport ptBR from 'd3-time-format/locale/pt-BR.json'\nimport ruRU from 'd3-time-format/locale/ru-RU.json'\nimport svSE from 'd3-time-format/locale/sv-SE.json'\nimport ukUA from 'd3-time-format/locale/uk-UA.json'\nimport zhCN from 'd3-time-format/locale/zh-CN.json'\nimport zhTW from 'd3-time-format/locale/zh-TW.json'\n\n// // creplaced with the following\n// export const DATATYPE_ICONS = {\n//   'date': <BsClock />,\n//   'number': <BsHash />,\n//   'string': <BsType />\n// }\n\nexport const DateIcon = BsClock\nexport const NumberIcon = BsHash\nexport const StringIcon = BsType\n\nexport const dataTypeIcons = {\n  date: DateIcon,\n  number: NumberIcon,\n  string: StringIcon,\n}\n\nexport const localeList = {\n  'ar-EG': arEG,\n  'ca-ES': caES,\n  'cs-CZ': csCZ,\n  'da-DK': daDK,\n  'de-CH': deCH,\n  'de-DE': deDE,\n  'en-CA': enCA,\n  'en-GB': enGB,\n  'en-US': enUS,\n  'es-ES': esES,\n  'es-MX': esMX,\n  'fa-IR': faIR,\n  'fi-FI': fiFI,\n  'fr-CA': frCA,\n  'fr-FR': frFR,\n  'he-IL': heIL,\n  'hu-HU': huHU,\n  'it-IT': itIT,\n  'ja-JP': jaJP,\n  'ko-KR': koKR,\n  'mk-MK': mkMK,\n  'nb-NO': nbNO,\n  'nl-NL': nlNL,\n  'pl-PL': plPL,\n  'pt-BR': ptBR,\n  'ru-RU': ruRU,\n  'sv-SE': svSE,\n  'uk-UA': ukUA,\n  'zh-CN': zhCN,\n  'zh-TW': zhTW,\n}\n\nexport const WEBWORKER_ACTIVE = true\n\nexport const separatorsLabels = {\n  '\\\\t': 'Tab',\n  ';': 'Semicolon',\n  ',': 'Comma',\n  '|': 'Pipe',\n}\n\nexport const separatorsList = Object.keys(separatorsLabels)\n\nexport const DefaultSeparator = \",\"\n\nexport const AGGREGATIONS_LABELS = {\n  \"count\": \"Count\",\n  \"mean\": \"Average\",\n  \"median\": \"Median\",\n  \"max\": \"Max\",\n  \"min\": \"Min\",\n  \"countDistinct\": \"Count unique\",\n  \"sum\": \"Sum\",\n  \"csv\": \"CSV\",\n  \"csvDistinct\": \"CSV (unique)\",\n}\n\nexport const SCALES_LABELS = {\n  \"sequential\": \"Sequential\",\n  \"diverging\": \"Diverging\",\n  \"ordinal\": \"Ordinal\"\n}\n\nexport const COLOR_SCHEMES_LABELS = {\n  \"interpolateBlues\": \"Blue sequential\",\n  \"interpolateGreens\": \"Green sequential\",\n  \"interpolateReds\": \"Red sequential\",\n  \"interpolateRdBu\": \"RdBu diverging\",\n  \"interpolateBrBG\": \"BrBG diverging\",\n  \"interpolatePiYG\": \"PiYG diverging\",\n  \"schemeCategory10\": \"Categorical 10\",\n  \"interpolateTurbo\": \"Turbo discrete\",\n  \"interpolateSpectral\": \"Spectral discrete\"\n}","export default function() {\n  return new Worker(__webpack_public_path__ + \"static/js/worker.15c1aa0d.worker.js\");\n}\n","import { dsvFormat } from 'd3'\nimport { DefaultSeparator, separatorsList } from '../../constants'\n\nfunction JsonParser(dataString) {\n  return [JSON.parse(dataString), {}]\n}\n\nfunction CsvParser(dataString, opts) {\n  // Use the separator the user gives me, if any\n  if (opts.separator) {\n    return [\n      dsvFormat(opts.separator).parse(dataString),\n      {\n        separator: opts.separator,\n      },\n    ]\n  }\n  // Otherwise, try to infer it\n  const candidates = []\n  for (const _separator of separatorsList) {\n    const separator = _separator\n      .replace(/\\\\r/g, '\\r')\n      .replace(/\\\\n/g, '\\n')\n      .replace(/\\\\t/g, '\\t')\n    try {\n      const parser = dsvFormat(separator)\n      const parsed = parser.parse(dataString)\n      if (\n        (parsed.length > 0 && Object.keys(parsed[0]).length > 1) ||\n        separator === DefaultSeparator\n      ) {\n        candidates.push({\n          separator,\n          score: Object.keys(parsed[0]).length,\n          parsed,\n        })\n      }\n    } catch (e) {}\n  }\n  candidates.sort((a, b) => b.score - a.score)\n  return [candidates[0].parsed, { separator: candidates[0].separator }]\n}\n\nconst PARSERS = [\n  { dataType: 'json', parse: JsonParser },\n  { dataType: 'csv', parse: CsvParser },\n]\n\nexport function parseData(dataString, opts) {\n  //Removing white lines (useful when pasting from sheets, ecc)\n  const trimmedDataString = dataString\n    .trim()\n    .replace(/^(?=\\n)$|^\\s*|\\s*$|\\n\\n+/gm, '')\n\n  for (const parser of PARSERS) {\n    try {\n      const [parsed, extra] = parser.parse(trimmedDataString, opts)\n      return [parser.dataType, parsed, extra]\n    } catch (e) {\n      // console.error('Parsing error', e)\n    }\n  }\n  return [null, null]\n}\n\nexport function parseAndCheckData(dataString, opts) {\n  const [dataType, data, extra] = parseData(dataString, opts)\n  if (dataType === null) {\n    // This should never happen\n    return [\n      dataType,\n      data,\n      'Cannot parse dataset! (This should never happen)',\n      {},\n    ]\n  } else {\n    if (dataType === 'json') {\n      return ['json', data, null, extra]\n    } else if (data.length > 0) {\n      return [dataType, data, null, extra]\n    } else {\n      return [null, null, \"We can't parse your data.\", {}]\n    }\n  }\n}\n\nfunction isScalarType(item) {\n  return ['string', 'number', 'boolean'].includes(typeof item)\n}\n\nexport function normalizeJsonArray(jsonArray) {\n  return jsonArray\n    .map((element) => {\n      let iterateElement = element\n      if (Array.isArray(iterateElement)) {\n        const tmp = {}\n        iterateElement.forEach((item, i) => {\n          tmp[`Column ${i + 1}`] = item\n        })\n        iterateElement = tmp\n      }\n      if (isScalarType(iterateElement) || iterateElement === null) {\n        iterateElement = { value: iterateElement }\n      }\n      const outElement = {}\n      for (const property in iterateElement) {\n        const value = iterateElement[property]\n        const valueType = typeof value\n        if (Array.isArray(value)) {\n          outElement[property] = value.filter(isScalarType).join(' ')\n        } else if (valueType === 'object' && valueType !== null) {\n          for (const nestedProperty in value) {\n            const nestedValue = value[nestedProperty]\n            if (isScalarType(nestedValue)) {\n              outElement[`${property}.${nestedProperty}`] = nestedValue\n            }\n          }\n        } else if (isScalarType(value)) {\n          outElement[property] = value\n        }\n      }\n      return outElement\n    })\n    .filter((item) => item !== null)\n}\n","import { flatMap, omit, map } from 'lodash'\n\nexport function stackData(data, column) {\n  return flatMap(data, (record) => {\n    const key = record[column]\n    const others = omit(record, column)\n    return map(others, (value, prop) => {\n      return {\n        [column]: key,\n        column: prop,\n        value,\n      }\n    })\n  })\n}\n","import { parseDataset } from '@rawgraphs/rawgraphs-core'\nimport { difference, get } from 'lodash'\nimport { useCallback, useState } from 'react'\nimport { DefaultSeparator, localeList, WEBWORKER_ACTIVE } from '../constants'\nimport { parseDatasetInWorker } from '../worker'\nimport {\n  normalizeJsonArray,\n  parseAndCheckData,\n} from './useDataLoaderUtils/parser'\nimport { stackData } from './useDataLoaderUtils/stack'\n\nexport const DATA_LOADER_MODE = {\n  DIRECT: 'direct',\n  REPLACE: 'replace',\n}\n\nconst __cache = {}\n\nexport default function useDataLoader() {\n  /* Data to be plot in the chart */\n  /* First stage: raw user input */\n  const [userInput, setUserInput] = useState('')\n  const [dataSource, setDataSource] = useState(null)\n\n  /* Second stage: parsed data and user data type (i.e. csv, json, ...) */\n  /*\n   * In case user data type is json, userData is not filled immediately.\n   * Instead, a JSON view is first shown asking the user to select an\n   * array inside the JSON tree. The (parsed) content of the array will\n   * be used to fill `userData`. In case of some error during parsing,\n   * the `parseError` state holds the error description\n   */\n  const [userData, setUserData] = useState(null)\n  const [userDataType, setUserDataType] = useState(null)\n  const [parseError, setParserError] = useState(null)\n  const [unstackedInfo, setUnstackedInfo] = useState([null, null])\n\n  /* Data Parsing Options */\n  const [separator, setSeparator] = useState(DefaultSeparator)\n  const [thousandsSeparator, setThousandsSeparator] = useState(',')\n  const [decimalsSeparator, setDecimalsSeparator] = useState('.')\n  const [locale, setLocale] = useState(navigator.language || 'en-US')\n  const [stackDimension, setStackDimension] = useState()\n\n  /* Third stage: data ready to become a chart */\n  const [data, setData] = useState(null)\n\n  /* Stack operations */\n  const [unstackedData, unstackedColumns] = unstackedInfo\n\n  /* Misc */\n  const [loading, setLoading] = useState(false)\n  const [mode, setMode] = useState(DATA_LOADER_MODE.DIRECT)\n  const [\n    replaceRequiresConfirmation,\n    setReplaceRequiresConfirmation,\n  ] = useState(undefined)\n\n  /* Unpacking */\n  const columnsTypes = unstackedColumns ?? data?.dataTypes\n\n  //wrapper for async parse via web worker\n  const parseDatasetAsyncAndSetData = useCallback(\n    (data, dataTypes, parsingOptions) => {\n      setLoading(true)\n      return parseDatasetInWorker(data, dataTypes, {\n        ...parsingOptions,\n        dateLocale: get(localeList, parsingOptions.locale),\n      })\n        .then((resultData) => {\n          return resultData\n        })\n        .catch((err) => {\n          console.log('eee', err)\n        })\n        .finally(() => {\n          setLoading(false)\n        })\n    },\n    [setLoading]\n  )\n\n  const parseDatasetSyncAndSetData = useCallback(\n    (data, dataTypes, parsingOptions) => {\n      setLoading(true)\n      return new Promise((resolve, reject) => {\n        try {\n          const resultData = parseDataset(data, dataTypes, {\n            ...parsingOptions,\n            dateLocale: get(localeList, parsingOptions.locale),\n          })\n          resolve(resultData)\n        } catch (e) {\n          reject(e)\n        } finally {\n          setLoading(false)\n        }\n      })\n    },\n    [setLoading]\n  )\n\n  const parseDatasetAuto = useCallback(\n    (data, dataTypes, parsingOptions) => {\n      const worker = WEBWORKER_ACTIVE\n        ? parseDatasetAsyncAndSetData\n        : parseDatasetSyncAndSetData\n      return worker(data, dataTypes, parsingOptions)\n    },\n    [parseDatasetAsyncAndSetData, parseDatasetSyncAndSetData]\n  )\n\n  const parseDatasetAndSetData = useCallback(\n    (data, dataTypes, parsingOptions) => {\n      return parseDatasetAuto(data, dataTypes, parsingOptions).then((data) =>\n        setData(data)\n      )\n    },\n    [parseDatasetAuto]\n  )\n\n  const reset = useCallback(() => {\n    setData(null)\n    setUserData(null)\n    setUserDataType(null)\n    setUserInput('')\n    setDataSource(null)\n    setParserError(null)\n    setStackDimension(null)\n    setUnstackedInfo([null, null])\n  }, [])\n\n  const hydrateFromSavedProject = useCallback(\n    (project) => {\n      const {\n        userInput,\n        userData,\n        userDataType,\n        parseError,\n        unstackedColumns,\n        unstackedData,\n        dataTypes,\n        separator,\n        thousandsSeparator,\n        decimalsSeparator,\n        locale,\n        stackDimension,\n        dataSource,\n      } = project\n      setUserInput(userInput)\n      setUserDataType(userDataType)\n      setSeparator(separator)\n      setThousandsSeparator(thousandsSeparator)\n      setDecimalsSeparator(decimalsSeparator)\n      setLocale(locale)\n      setStackDimension(stackDimension)\n      setDataSource(dataSource)\n      setUserData(userData)\n      setParserError(parseError)\n      setUnstackedInfo([unstackedData, unstackedColumns])\n      parseDatasetAndSetData(userData, dataTypes, {\n        thousandsSeparator,\n        decimalsSeparator,\n        locale,\n      })\n    },\n    [parseDatasetAndSetData]\n  )\n\n  const handleReplacingData = useCallback(\n    (userData) => {\n      parseDatasetAuto(userData, undefined, {\n        locale,\n        decimal: decimalsSeparator,\n        group: thousandsSeparator,\n      }).then((newDataInferred) => {\n        if (newDataInferred.errors.length > 0) {\n          // Parsing resulted in errors, cannot replace data safely!\n          __cache.replacedData = newDataInferred\n          setReplaceRequiresConfirmation('parse-error')\n        } else {\n          const oldColNames = Object.keys(columnsTypes)\n          const newColNames = Object.keys(newDataInferred.dataTypes)\n          const missingCols = difference(oldColNames, newColNames)\n          if (missingCols.length > 0) {\n            // There is at least one column missing in the new dataset\n            // Replace cannot be safe\n            __cache.replacedData = newDataInferred\n            setReplaceRequiresConfirmation('missing-column:' + missingCols[0])\n          } else {\n            const nextDataTypes = {\n              ...newDataInferred.dataTypes,\n              ...columnsTypes, // Keep eventual overrides in data types\n            }\n            parseDatasetAuto(userData, nextDataTypes, {\n              locale,\n              decimal: decimalsSeparator,\n              group: thousandsSeparator,\n            }).then((newData) => {\n              if (newData.errors.length > 0) {\n                // There was some error in type coercing, data cannot be replaced safely\n                __cache.replacedData = newDataInferred\n                setReplaceRequiresConfirmation('type-mismatch')\n              } else {\n                if (stackDimension) {\n                  setUnstackedInfo([userData, newData.dataTypes])\n                  const stackedData = stackData(userData, stackDimension)\n                  setUserData(stackedData)\n                  parseDatasetAuto(stackedData, data.dataTypes, {\n                    locale,\n                    decimal: decimalsSeparator,\n                    group: thousandsSeparator,\n                  }).then(data => setData(data))\n                } else {\n                  setData(newData)\n                }\n              }\n            })\n          }\n        }\n      })\n    },\n    [\n      columnsTypes,\n      data,\n      decimalsSeparator,\n      locale,\n      parseDatasetAuto,\n      stackDimension,\n      thousandsSeparator,\n    ]\n  )\n\n  const handleNewUserData = useCallback(\n    (nextUserData) => {\n      setUserData(nextUserData)\n      if (mode === DATA_LOADER_MODE.DIRECT) {\n        parseDatasetAndSetData(nextUserData, undefined, {\n          locale,\n          decimal: decimalsSeparator,\n          group: thousandsSeparator,\n        })\n      } else if (mode === DATA_LOADER_MODE.REPLACE) {\n        handleReplacingData(nextUserData)\n      } else {\n        console.error('Unknown data loader mode!')\n      }\n    },\n    [\n      decimalsSeparator,\n      handleReplacingData,\n      locale,\n      mode,\n      parseDatasetAndSetData,\n      thousandsSeparator,\n    ]\n  )\n\n  /*\n   * Callback to handle user injecting data\n   * When user uploads some data (in any possible way), we store the raw user input at first\n   * Then we try to read it using different parsers (notably json and csv)\n   * Finally, if read is successful, we go inferring types using the raw-core library\n   */\n  function setUserDataAndDetect(str, source, options) {\n    const [dataType, parsedUserData, error, extra] = parseAndCheckData(str, {\n      separator: get(options, 'separator', null),\n    })\n    setUserInput(str)\n    setDataSource(source)\n    setUserDataType(dataType)\n    setParserError(error)\n    if (extra && typeof extra === \"object\" && \"separator\" in extra) {\n      setSeparator(extra.separator)\n    }\n    // Data parsed ok set parent data\n    if (dataType !== 'json' && !error) {\n      handleNewUserData(parsedUserData)\n    }\n  }\n\n  const setJsonData = useCallback(\n    (data) => {\n      const normalized = normalizeJsonArray(data)\n      setUserData(normalized)\n      handleNewUserData(normalized)\n    },\n    [handleNewUserData]\n  )\n\n  /*\n   * Callback to handle user changing separator\n   * When the separator is changed, a fresh parsing of raw user input is required for proper handling\n   * Steps are very similar with respect to the `setUserInputAndDetect` callback, except for the\n   * fact that we take user input from state instead of from parameters\n   */\n  function handleChangeSeparator(newSeparator) {\n    const [dataType, parsedUserData, error] = parseAndCheckData(userInput, {\n      separator: newSeparator,\n    })\n    setSeparator(newSeparator)\n    setUserDataType(dataType)\n    setParserError(error)\n    if (dataType !== 'json' && !error && newSeparator) {\n      setUserData(parsedUserData)\n      parseDatasetAndSetData(parsedUserData, undefined, {\n        locale,\n        decimal: decimalsSeparator,\n        group: thousandsSeparator,\n      })\n    }\n  }\n\n  function handleChangeLocale(newLocale) {\n    if (!data) {\n      return\n    }\n    parseDatasetAndSetData(data.dataset, data.dataTypes, {\n      locale: newLocale,\n      decimal: decimalsSeparator,\n      group: thousandsSeparator,\n    })\n    setLocale(newLocale)\n  }\n\n  function handleChangeDecimalSeparator(newDecimalSeparator) {\n    const [dataType, parsedUserData, error] = parseAndCheckData(userInput, {\n      separator,\n    })\n    setDecimalsSeparator(newDecimalSeparator)\n    setUserDataType(dataType)\n    setParserError(error)\n    if (dataType !== 'json' && !error) {\n      setUserData(parsedUserData)\n      setLoading(true)\n      parseDatasetAndSetData(parsedUserData, undefined, {\n        locale,\n        decimal: newDecimalSeparator,\n        group: thousandsSeparator,\n      })\n      //setData(parseDataset(parsedUserData, undefined, {locale, decimal: newDecimalSeparator, group:thousandsSeparator}));\n    }\n  }\n\n  function handleChangeThousandsSeparator(newThousandsSeparator) {\n    const [dataType, parsedUserData, error] = parseAndCheckData(userInput, {\n      separator,\n    })\n    setThousandsSeparator(newThousandsSeparator)\n    setUserDataType(dataType)\n    setParserError(error)\n    if (dataType !== 'json' && !error) {\n      setUserData(parsedUserData)\n      parseDatasetAndSetData(parsedUserData, undefined, {\n        locale,\n        decimal: decimalsSeparator,\n        group: newThousandsSeparator,\n      })\n      // setData(parseDataset(parsedUserData, undefined, {locale, decimal: decimalsSeparator, group:newThousandsSeparator}));\n    }\n  }\n\n  /*\n   * Callback to handle user coercing a type of a column\n   * When this happens, we don't need to go through data parsing again, we just invoke\n   * the raw-core library starting from the parsed data (stage-2 data)\n   */\n  function coerceTypes(nextTypes) {\n    parseDatasetAndSetData(userData, nextTypes, {\n      locale,\n      decimal: decimalsSeparator,\n      group: thousandsSeparator,\n    })\n  }\n\n  /*\n   * Callback to handle user selecting a data sample from RawGraphs.io\n   * When this happens, we have data parsed with dsv with a proper separator out of the box\n   *   since in this case data are rigorously checked\n   * So we just take them as good and use the raw-core library to infer types\n   */\n  function loadSample(rawData, sampleSeparator) {\n    setSeparator(sampleSeparator)\n    setUserDataAndDetect(\n      rawData,\n      { type: 'sample' },\n      { separator: sampleSeparator }\n    )\n  }\n\n  function handleInlineEdit(newDataset) {\n    setUserData(newDataset)\n    parseDatasetAndSetData(newDataset, data.dataTypes, {\n      locale,\n      decimal: decimalsSeparator,\n      group: thousandsSeparator,\n    })\n    // setData(parseDataset(newDataset, data.dataTypes, {locale}))\n  }\n\n  function handleStackOperation(column) {\n    setStackDimension(column)\n    if (column !== null) {\n      if (unstackedData === null) {\n        setUnstackedInfo([userData, data.dataTypes])\n      }\n      const stackedData = stackData(unstackedData || userData, column)\n      setUserData(stackedData)\n      parseDatasetAndSetData(stackedData, undefined, {\n        locale,\n        decimal: decimalsSeparator,\n        group: thousandsSeparator,\n      })\n      // setData(parseDataset(stackedData, undefined, { locale }))\n    } else {\n      setUserData(unstackedData)\n      parseDatasetAndSetData(unstackedData, unstackedColumns, {\n        locale,\n        decimal: decimalsSeparator,\n        group: thousandsSeparator,\n      })\n      setUnstackedInfo([null, null])\n    }\n  }\n\n  const startDataReplace = useCallback(() => {\n    setMode(DATA_LOADER_MODE.REPLACE)\n    __cache.userInput = userInput\n    __cache.userDataType = userDataType\n    __cache.dataSource = dataSource\n    __cache.userData = userData\n    setUserInput(null)\n    setUserDataType(null)\n    setDataSource(null)\n    setUserData(null)\n  }, [dataSource, userData, userDataType, userInput])\n\n  const cancelDataReplace = useCallback(() => {\n    setReplaceRequiresConfirmation(false)\n    setMode(DATA_LOADER_MODE.DIRECT)\n    setUserInput(__cache.userInput)\n    setUserDataType(__cache.userDataType)\n    setDataSource(__cache.dataSource)\n    setUserData(__cache.userData)\n  }, [])\n\n  const commitDataReplace = useCallback(() => {\n    setReplaceRequiresConfirmation(false)\n    setData(__cache.replacedData)\n    setParserError(null)\n    setStackDimension(null)\n    setUnstackedInfo([null, null])\n  }, [])\n\n  return {\n    userInput,\n    setUserInput: setUserDataAndDetect,\n    userData,\n    userDataType,\n    parseError,\n    unstackedData,\n    unstackedColumns,\n    separator,\n    setSeparator: handleChangeSeparator,\n    thousandsSeparator,\n    setThousandsSeparator: handleChangeThousandsSeparator,\n    decimalsSeparator,\n    setDecimalsSeparator: handleChangeDecimalSeparator,\n    locale,\n    setLocale: handleChangeLocale,\n    stackDimension,\n    dataSource,\n    data,\n    loading,\n    coerceTypes,\n    loadSample,\n    handleInlineEdit,\n    handleStackOperation,\n    setJsonData,\n    resetDataLoader: reset,\n    hydrateFromSavedProject,\n    dataLoaderMode: mode,\n    startDataReplace,\n    cancelDataReplace,\n    commitDataReplace,\n    replaceRequiresConfirmation,\n  }\n}\n","import React, { useMemo, useRef, useState, useCallback } from 'react'\nimport ReactDataGrid from 'react-data-grid'\nimport { Overlay, OverlayTrigger } from 'react-bootstrap'\nimport classNames from 'classnames'\nimport { getTypeName, dateFormats } from '@rawgraphs/rawgraphs-core'\nimport S from './DataGrid.module.scss'\nimport { keyBy, get, isEqual } from 'lodash'\nimport {\n  dataTypeIcons,\n  DateIcon,\n  StringIcon,\n  NumberIcon,\n} from '../../constants'\nimport { BsFillCaretRightFill } from 'react-icons/bs'\n\nconst DATE_FORMATS = Object.keys(dateFormats)\n\nconst DateFormatSelector = React.forwardRef(\n  ({ currentFormat, onChange, className, ...props }, ref) => {\n    return (\n      <div\n        className={classNames(className, S['date-format-selector'])}\n        ref={ref}\n        {...props}\n      >\n        {DATE_FORMATS.map((dateFmt) => (\n          <div\n            key={dateFmt}\n            className={classNames(S['date-format-selector-entry'], {\n              [S.selected]: get(currentFormat, 'dateFormat', '') === dateFmt,\n            })}\n            onClick={(e) => {\n              e.stopPropagation()\n              e.preventDefault()\n              onChange &&\n                onChange({\n                  type: 'date',\n                  dateFormat: dateFmt,\n                })\n            }}\n          >\n            {dateFmt}\n          </div>\n        ))}\n      </div>\n    )\n  }\n)\n\nfunction DataTypeSelector({\n  currentType: typeDescriptor,\n  onTypeChange,\n  currentTypeComplete,\n}) {\n  const dataTypeIconDomRef = useRef(null)\n  const [showPicker, setShowPicker] = useState(false)\n  const currentType = get(typeDescriptor, 'type', typeDescriptor)\n\n  const handleTypeChange = useCallback(\n    (e) => {\n      e.stopPropagation()\n      e.preventDefault()\n      const newType = e.target.dataset.datatype\n      if (\n        typeof onTypeChange === 'function' &&\n        !isEqual(newType, typeDescriptor)\n      ) {\n        onTypeChange(newType)\n      }\n      setShowPicker(false)\n    },\n    [typeDescriptor, onTypeChange]\n  )\n\n  const handleTypeChangeDate = useCallback(\n    (newType) => {\n      if (\n        typeof onTypeChange === 'function' &&\n        !isEqual(newType, typeDescriptor)\n      ) {\n        onTypeChange(newType)\n      }\n      setShowPicker(false)\n    },\n    [typeDescriptor, onTypeChange]\n  )\n\n  const handleTargetClick = useCallback(\n    (e) => {\n      e.stopPropagation()\n      e.preventDefault()\n      setShowPicker(!showPicker)\n    },\n    [showPicker]\n  )\n\n  const Icon = dataTypeIcons[currentType]\n\n  return (\n    <>\n      <span\n        role=\"button\"\n        className={S['data-type-selector-trigger']}\n        ref={dataTypeIconDomRef}\n        onClick={handleTargetClick}\n      >\n        <Icon />\n      </span>\n      <Overlay\n        target={dataTypeIconDomRef.current}\n        show={showPicker}\n        placement=\"bottom-start\"\n        rootClose={true}\n        rootCloseEvent=\"click\"\n        onHide={() => {\n          setShowPicker(false)\n        }}\n        container={document.body}\n      >\n        {({\n          placement,\n          scheduleUpdate,\n          arrowProps,\n          outOfBoundaries,\n          show: _show,\n          ...props\n        }) => (\n          <div\n            id=\"data-type-selector\"\n            className={S['data-type-selector']}\n            onClick={(e) => e.stopPropagation()}\n            {...props}\n          >\n            <div\n              data-datatype=\"number\"\n              onClick={handleTypeChange}\n              className={classNames(S['data-type-selector-item'], {\n                [S.selected]: currentType === 'number',\n              })}\n            >\n              <NumberIcon /> Number\n            </div>\n            <OverlayTrigger\n              placement=\"right-start\"\n              overlay={\n                <DateFormatSelector\n                  currentType={typeDescriptor}\n                  onChange={handleTypeChangeDate}\n                />\n              }\n              trigger=\"click\"\n            >\n              {({ ref, ...triggerHandler }) => (\n                <div\n                  ref={ref}\n                  data-datatype=\"date\"\n                  {...triggerHandler}\n                  className={classNames(\n                    S['data-type-selector-item'],\n                    S['parent-type-selector'],\n                    { [S.selected]: currentType === 'date' }\n                  )}\n                >\n                  <div>\n                    <DateIcon />\n                    {'Date'}\n                    {currentType === 'date' && (\n                      <span className={S['date-format-preview']}>\n                        {' (' + (currentTypeComplete.dateFormat) + ')  '}\n                      </span>\n                    )}\n                  </div>\n                  <BsFillCaretRightFill\n                    style={{ marginRight: 0, fill: 'var(--gray-700)' }}\n                  />\n                </div>\n              )}\n            </OverlayTrigger>\n            <div\n              data-datatype=\"string\"\n              onClick={handleTypeChange}\n              className={classNames(S['data-type-selector-item'], {\n                [S.selected]: currentType === 'string',\n              })}\n            >\n              <StringIcon /> String\n            </div>\n          </div>\n        )}\n      </Overlay>\n    </>\n  )\n}\n\nfunction HeaderRenderer({ ...props }) {\n  const { column } = props\n  const { key, sortColumn, sortDirection } = column\n  return (\n    <div\n      className={classNames(\n        { [S['raw-col-header']]: true },\n        {\n          [S['unsorted']]:\n            key !== sortColumn ||\n            (key === sortColumn && sortDirection === 'NONE'),\n        },\n        { [S['acs']]: key === sortColumn && sortDirection === 'ASC' },\n        { [S['desc']]: key === sortColumn && sortDirection === 'DESC' }\n      )}\n    >\n      <DataTypeSelector\n        currentType={column._raw_datatype}\n        onTypeChange={column._raw_coerceType}\n        currentTypeComplete={column._raw_datatype}\n      />\n      <span\n        className={classNames(S['column-name'], 'text-truncate', 'd-block')}\n        title={column.name}\n      >\n        {column.name}\n      </span>\n    </div>\n  )\n}\n\nexport default function DataGrid({\n  userDataset,\n  dataset,\n  errors,\n  dataTypes,\n  coerceTypes,\n  onDataUpdate,\n}) {\n  const [[sortColumn, sortDirection], setSort] = useState(['id', 'NONE'])\n\n  const keyedErrors = useMemo(() => keyBy(errors, 'row'), [errors])\n\n  const containerEl = useRef()\n\n  // Make id column just as large as needed\n  // Adjust constants to fit cell padding and font size\n  // (Math.floor(Math.log10(data.dataset.length)) + 1) is the number\n  //   of digits of the highest id\n  const idColumnWidth =\n    24 + 8 * (Math.floor(Math.log10(userDataset.length)) + 1)\n  \n  const equalDinstribution = (containerEl.current?.getBoundingClientRect().width - idColumnWidth - 1) / Object.keys(dataTypes).length\n  const columnWidth = equalDinstribution ? Math.max(equalDinstribution, 170) : 170;\n\n  const columns = useMemo(() => {\n    if (!userDataset || !dataTypes) {\n      return []\n    }\n    return [\n      {\n        key: '_id',\n        name: '',\n        headerRenderer: () => null,\n        frozen: true,\n        width: idColumnWidth,\n        sortable: true,\n      },\n      ...Object.keys(dataTypes).map((k, i) => ({\n        key: k,\n        name: k,\n        sortColumn: sortColumn,\n        sortDirection: sortDirection,\n        headerRenderer: HeaderRenderer,\n        editable: true,\n        formatter: ({ row }) => {\n          return (\n            <div\n              className={classNames({ [S['has-error']]: row?._errors?.[k] })}\n            >\n              {row[k]?.toString()}\n              {/* {row[k]} */}\n            </div>\n          )\n        },\n        _raw_datatype: dataTypes[k],\n        _raw_coerceType: (nextType) =>\n          coerceTypes({ ...dataTypes, [k]: nextType }),\n        sortable: true,\n        resizable: true,\n        width: columnWidth\n      })),\n    ]\n  }, [\n    coerceTypes,\n    dataTypes,\n    userDataset,\n    idColumnWidth,\n    columnWidth,\n    sortColumn,\n    sortDirection,\n  ])\n\n  const sortedDataset = useMemo(() => {\n    let datasetWithIds = userDataset.map((item, i) => ({\n      // Using .map ensures that we are not mutating a property\n      ...item,\n      _id: i + 1, // Give items some id to populate left-most column\n      _stage3: dataset[i], // The dataset parsed by raw lib basing on data types is needed for sorting!\n      _errors: keyedErrors[i]?.error, // Inject errors to format cells with parsing errors\n    }))\n    if (sortDirection === 'NONE') return datasetWithIds\n\n    const sortColumnType = getTypeName(dataTypes[sortColumn])\n\n    if (sortColumnType === 'number') {\n      datasetWithIds = datasetWithIds.sort(\n        (a, b) => a._stage3[sortColumn] - b._stage3[sortColumn]\n      )\n    } else if (sortColumnType === 'date') {\n      datasetWithIds =\n        datasetWithIds.sort(\n          (a, b) =>\n            a._stage3[sortColumn]?.valueOf() ??\n            0 - b._stage3[sortColumn]?.valueOf()\n        ) ?? 0\n    } else {\n      datasetWithIds = datasetWithIds.sort((a, b) =>\n        a._stage3[sortColumn]\n          ?.toString()\n          .localeCompare(b._stage3[sortColumn].toString())\n      )\n    }\n\n    return sortDirection === 'DESC' ? datasetWithIds.reverse() : datasetWithIds\n  }, [userDataset, sortDirection, dataTypes, sortColumn, dataset, keyedErrors])\n\n  const handleSort = useCallback((columnKey, direction) => {\n    setSort([columnKey, direction])\n  }, [])\n\n  return (\n    <div ref={containerEl}>\n      <ReactDataGrid\n        minColumnWidth={idColumnWidth}\n        columns={columns}\n        rows={sortedDataset}\n        rowHeight={48}\n        sortColumn={sortColumn}\n        sortDirection={sortDirection}\n        onSort={handleSort}\n        height={432}\n        onColumnResize={() => {\n          \n        }}\n        onRowsUpdate={(update) => {\n          if (update.action === 'CELL_UPDATE') {\n            const newDataset = [...userDataset]\n            newDataset[update.fromRow] = {\n              ...newDataset[update.fromRow],\n              [update.cellKey]: update.updated[update.cellKey],\n            }\n            onDataUpdate && onDataUpdate(newDataset)\n          }\n        }}\n      />\n    </div>\n  )\n}\n","import React from 'react'\nimport { Row, Col, Card } from 'react-bootstrap'\n\nconst samplesList = [\n  {\n    name: 'Highest grossing movies in history',\n    category: 'Bubble chart, convex hull diagram',\n    url: './sample-datasets/Bubble Chart - TOP 50 Groossing Movies.tsv',\n    delimiter: '\\t',\n  },\n\n  {\n    name: 'US Presidential Elections (1976-2020)',\n    category: 'Line Graph',\n    url: './sample-datasets/Line Graph - US Presidential Elections.tsv',\n    delimiter: '\\t',\n  },\n\n  {\n    name: 'Letter Frequency by Language',\n    category: 'Matrix plot (Heatmap)',\n    url: './sample-datasets/Matrix Plot - Letters frequencies by language.tsv',\n    delimiter: '\\t',\n  },\n\n  {\n    name: 'Aromas of wine and frequency',\n    category: 'Sunburst Diagram',\n    url: './sample-datasets/Sunburst - Wine Aromas.tsv',\n    delimiter: '\\t',\n  },\n\n  {\n    name: 'Orchestras by musical instrument',\n    category: 'Treemap, Circle packing',\n    url: './sample-datasets/Treemap - Orchestra.tsv',\n    delimiter: '\\t',\n  },\n\n  {\n    name: 'Animal kingdom classification',\n    category: 'Dendrogram',\n    url: './sample-datasets/Dendrogram - animal kingdom.tsv',\n    delimiter: '\\t',\n  },\n\n  {\n    name: 'Most populated cities per continent',\n    category: 'Boxplot, Violin plot',\n    url: './sample-datasets/Boxplot - biggest-cities.tsv',\n    delimiter: '\\t',\n  },\n\n  {\n    name: 'FIFA players statistics',\n    category: 'Radar Chart',\n    url: './sample-datasets/Radar Chart - Fifa players.tsv',\n    delimiter: '\\t',\n  },\n\n  // {\n  //   name: 'Premier League and Serie A ranking',\n  //   category: 'Slope Graph',\n  //   url: './sample-datasets/Slope graph - Premier SerieA ranking.tsv',\n  //   delimiter: '\\t',\n  // },\n\n  {\n    name: 'Olympics Medals',\n    category: 'Streamgraph, Bumpchart',\n    url: './sample-datasets/Streamgraph - Olympics Medals.tsv',\n    delimiter: '\\t',\n  },\n\n  {\n    name: 'Basketball shots',\n    category: 'Hexagonal Binning',\n    url: './sample-datasets/Hexbin - basketball shots.tsv',\n    delimiter: '\\t',\n  },\n\n  {\n    name: 'Energy flows',\n    category: 'Sankey diagram, Arc diagram',\n    url: './sample-datasets/Sankey - Energy flows.csv',\n    delimiter: ',',\n  },\n\n  {\n    name: 'Italians PMs and Presidents',\n    category: 'Gantt chart',\n    url: './sample-datasets/Gantt chart - italian-PMs-presidents.tsv',\n    delimiter: '\\t',\n  },\n\n  {\n    name: 'New York mean wage per occupation',\n    category: 'Beeswarm plot',\n    url: './sample-datasets/Beeswarm plot - NY mean wages.tsv',\n    delimiter: '\\t',\n  },\n\n  {\n    name: 'RIAA - Revenues per Music format',\n    category: 'Bar chart',\n    url: './sample-datasets/Bar chart - RIAA Music format revenues.tsv',\n    delimiter: '\\t',\n  },\n]\nexport default function DataSamples({ onSampleReady, setLoadingError }) {\n  const select = async (sample) => {\n    const { delimiter, url } = sample\n    let response\n    try {\n      response = await fetch(url)\n    } catch (e) {\n      setLoadingError('Loading error. ' + e.message)\n      return\n    }\n    const text = await response.text()\n    onSampleReady(text, delimiter)\n    setLoadingError(null)\n  }\n  return (\n    <Row>\n      {samplesList\n        // sort by category name\n        .sort((a, b) => a.name.localeCompare(b.name))\n        .map((d, i) => {\n          return (\n            <Col xs={6} lg={4} xl={3} key={i} style={{ marginBottom: 15 }}>\n              <Card\n                onClick={() => {\n                  select(d)\n                }}\n                className=\"cursor-pointer h-100\"\n              >\n                <Card.Body className=\"d-flex flex-column\">\n                  <Card.Title className=\"\">\n                    <h2 className=\"\">{d.name}</h2>\n                  </Card.Title>\n                  <Card.Subtitle className=\"mt-auto\">\n                    <h4 className=\"m-0\">{d.category}</h4>\n                  </Card.Subtitle>\n                </Card.Body>\n              </Card>\n            </Col>\n          )\n        })}\n    </Row>\n  )\n}\n","import React, { useCallback, useState } from 'react'\nimport { map } from 'lodash'\nimport './JsonViewer.scss'\n\nconst JsonViewerRecursive = ({\n  contextName,\n  nestingLevel,\n  context,\n  selectFilter,\n  onSelect,\n}) => {\n  const isSelectable = selectFilter(context)\n  const contextType = typeof context\n  const [mouseOver, setMouseOver] = useState(false)\n\n  const classes = [\n    'json-nested',\n    isSelectable ? 'selectable' : null,\n    mouseOver ? 'hover' : null,\n  ]\n    .filter((i) => i !== null)\n    .join(' ')\n\n  const handleSelect = useCallback(\n    (e) => {\n      if (isSelectable) {\n        e.stopPropagation()\n        e.preventDefault()\n        if (onSelect) onSelect(context)\n      }\n    },\n    [context, isSelectable, onSelect]\n  )\n\n  const handleMouseOver = useCallback(\n    (e) => {\n      if (isSelectable) {\n        e.stopPropagation()\n        e.preventDefault()\n        setMouseOver(true)\n      }\n    },\n    [isSelectable]\n  )\n\n  const handleMouseOut = useCallback(\n    (e) => {\n      if (isSelectable) {\n        e.stopPropagation()\n        e.preventDefault()\n        setMouseOver(false)\n      }\n    },\n    [isSelectable]\n  )\n\n  if (contextType === 'object' && contextType !== null) {\n    return (\n      <div\n        className={classes}\n        onClick={handleSelect}\n        onMouseOver={handleMouseOver}\n        onMouseOut={handleMouseOut}\n      >\n        {contextName && (\n          <>\n            <span className=\"property-name\">{contextName}</span>\n            <span className=\"colon\">{': '}</span>\n          </>\n        )}\n        {!Array.isArray(context) && (\n          <span className=\"curly-bracket open-bracket\">{'{'}</span>\n        )}\n        {Array.isArray(context) && (\n          <span className=\"square-bracket open-bracket\">{'['}</span>\n        )}\n        {map(context, (value, property) => (\n          <JsonViewerRecursive\n            key={property}\n            contextName={Array.isArray(context) ? null : property}\n            nestingLevel={nestingLevel + 1}\n            context={value}\n            selectFilter={selectFilter}\n            onSelect={onSelect}\n          />\n        ))}\n        {!Array.isArray(context) && (\n          <span className=\"curly-bracket close-bracket\">{'}'}</span>\n        )}\n        {Array.isArray(context) && (\n          <span className=\"square-bracket close-bracket\">{']'}</span>\n        )}\n      </div>\n    )\n  } else {\n    return (\n      <div\n        className={classes}\n        onClick={handleSelect}\n        onMouseOver={handleMouseOver}\n        onMouseOut={handleMouseOut}\n      >\n        {contextName && (\n          <>\n            <span className=\"property-name\">{contextName}</span>\n            <span className=\"colon\">{': '}</span>\n          </>\n        )}\n        {context === null && <span className=\"scalar-value\">null</span>}\n        {context !== null && (\n          <>\n            {(contextType === 'bigint' || contextType === 'number') && (\n              <span className=\"scalar-value scalar-value-numeric\">\n                {context.toString()}\n              </span>\n            )}\n            {contextType === 'string' && (\n              <span className=\"scalar-value scalar-value-string\">\n                \"{context.toString()}\"\n              </span>\n            )}\n            {contextType === 'boolean' && (\n              <span className=\"scalar-value scalar-value-bool\">\n                \"{context ? 'true' : 'false'}\"\n              </span>\n            )}\n            {contextType === 'undefined' && (\n              <span className=\"scalar-value scalar-value-undefined\">\n                undefined\n              </span>\n            )}\n          </>\n        )}\n      </div>\n    )\n  }\n}\n\nconst JsonViewer = ({ context, selectFilter, onSelect }) => {\n  return (\n    <pre className=\"json-viewer\">\n      <JsonViewerRecursive\n        contextName={null}\n        nestingLevel={0}\n        context={context}\n        selectFilter={selectFilter}\n        onSelect={onSelect}\n      />\n    </pre>\n  )\n}\n\nexport default JsonViewer\n","import React, { useCallback } from 'react'\nimport { Dropdown } from 'react-bootstrap'\nimport { separatorsLabels } from '../../constants'\n\nimport styles from './ParsingOptions.module.scss'\n\nexport default function SeparatorSelector({\n  title,\n  value,\n  onChange,\n  ...props\n}) {\n  const inputValue = value\n    .replace(/\\r/g, '\\\\r')\n    .replace(/\\n/g, '\\\\n')\n    .replace(/\\t/g, '\\\\t')\n\n  const handleChange = useCallback(\n    (separator) => {\n      if (onChange) {\n        const nextValue = separator\n          .replace(/\\\\r/g, '\\r')\n          .replace(/\\\\n/g, '\\n')\n          .replace(/\\\\t/g, '\\t')\n        onChange(nextValue)\n      }\n    },\n    [onChange]\n  )\n\n  const formatValue = (value)=>{\n    return (\n      <>\n        <span className={['small',styles['separator-preview']].join(' ')}>{value}</span> <span>{separatorsLabels[value]}</span>\n      </>\n    )\n  }\n\n  return (\n    <>\n      <div className=\"option\">\n        {title}\n        <Dropdown className=\"d-inline-block raw-dropdown\">\n          <Dropdown.Toggle variant=\"white\" className=\"d-flex justify-content-start align-items-center text-truncate\">\n            { formatValue(inputValue) }\n          </Dropdown.Toggle>\n          <Dropdown.Menu>\n            {Object.keys(separatorsLabels).map(key=>{\n              return <Dropdown.Item key={separatorsLabels[key]} onSelect={() => handleChange(key)}>\n                { formatValue(key) }\n              </Dropdown.Item>\n            })}\n          </Dropdown.Menu>\n        </Dropdown>\n      </div>\n    </>\n  )\n}\n","import React, { useCallback } from 'react'\n\nexport default function ThousandsSeparatorSelector({\n  title,\n  value,\n  onChange,\n  ...props\n}) {\n  const inputValue = value\n  // // Remove?\n  // .replace(/\\r/g, \"\\\\r\")\n  // .replace(/\\n/g, \"\\\\n\")\n  // .replace(/\\t/g, \"\\\\t\")\n\n  const handleChange = useCallback(\n    (e) => {\n      if (onChange) {\n        const nextValue = e.target.value\n        // // Remove?\n        // .replace(/\\\\r/g, \"\\r\")\n        // .replace(/\\\\n/g, \"\\n\")\n        // .replace(/\\\\t/g, \"\\t\")\n\n        onChange(nextValue)\n      }\n    },\n    [onChange]\n  )\n\n  return (\n    <div className=\"option\">\n      {title}\n      <input\n        type=\"text\"\n        className=\"form-control text-field d-inline-block\"\n        value={inputValue}\n        onChange={handleChange}\n        {...props}\n      />\n    </div>\n  )\n}\n","import React, { useCallback } from 'react'\n\nexport default function DecimalsSeparatorSelector({\n  title,\n  value,\n  onChange,\n  ...props\n}) {\n  const inputValue = value\n\n  const handleChange = useCallback(\n    (e) => {\n      if (onChange) {\n        const nextValue = e.target.value\n        onChange(nextValue)\n      }\n    },\n    [onChange]\n  )\n\n  return (\n    <div className=\"option\">\n      {title}\n      <input\n        type=\"text\"\n        className=\"form-control text-field d-inline-block\"\n        value={inputValue}\n        onChange={handleChange}\n        {...props}\n      />\n    </div>\n  )\n}\n","import React, { useCallback } from 'react'\nimport { Dropdown } from 'react-bootstrap'\nimport { localeList } from '../../constants'\n\nexport default function DateLocaleSelector({\n  title,\n  value,\n  onChange,\n  ...props\n}) {\n  const handleChange = useCallback(\n    (locale) => {\n      if (onChange) {\n        const nextLocale = locale\n        onChange(nextLocale)\n      }\n    },\n    [onChange]\n  )\n\n  return (\n    <div className=\"option\">\n      {title}\n      <Dropdown className=\"d-inline-block raw-dropdown\">\n        <Dropdown.Toggle variant=\"white\" className=\"\">\n          {value}\n        </Dropdown.Toggle>\n        <Dropdown.Menu>\n          <Dropdown.Header>\n            <span>\n              from{' '}\n              <a\n                href=\"https://github.com/d3/d3-time-format/tree/master/locale\"\n                target=\"_blank\"\n                rel=\"noopener noreferrer\"\n              >\n                d3-time-format\n              </a>\n            </span>\n          </Dropdown.Header>\n          {Object.keys(localeList).map((d) => {\n            return (\n              <Dropdown.Item key={d} onSelect={() => handleChange(d)}>\n                {d}\n              </Dropdown.Item>\n            )\n          })}\n        </Dropdown.Menu>\n      </Dropdown>\n    </div>\n  )\n}\n","import React, { useCallback } from 'react'\nimport { Dropdown } from 'react-bootstrap'\n\nexport default function StackSelector({\n  title,\n  value,\n  list,\n  onChange,\n  ...props\n}) {\n  const handleChange = useCallback(\n    (nextDimension) => {\n      if (onChange) {\n        onChange(nextDimension)\n      }\n    },\n    [onChange]\n  )\n\n  return (\n    <div className=\"option\">\n      {title}\n      <Dropdown className=\"d-inline-block raw-dropdown\">\n        <Dropdown.Toggle\n          variant=\"white\"\n          className=\"truncate-160px\"\n          disabled={list.length === 0}\n        >\n          {value ? value : 'Column'}\n        </Dropdown.Toggle>\n        <Dropdown.Menu>\n          {value && (\n            <Dropdown.Item onSelect={() => handleChange(null)}>\n              {'Do not stack'}\n            </Dropdown.Item>\n          )}\n          {Object.keys(list).map((d) => {\n            return (\n              <Dropdown.Item key={d} onSelect={() => handleChange(d)}>\n                {d}\n              </Dropdown.Item>\n            )\n          })}\n        </Dropdown.Menu>\n      </Dropdown>\n    </div>\n  )\n}\n","import React from 'react'\nimport { Row, Col, Button } from 'react-bootstrap'\nimport SeparatorSelector from './SeparatorSelector'\nimport ThousandsSeparatorSelector from './ThousandsSeparatorSelector'\nimport DecimalsSeparatorSelector from './DecimalsSeparatorSelector'\nimport DateLocaleSelector from './DateLocaleSelector'\nimport StackSelector from './StackSelector'\n\nimport styles from './ParsingOptions.module.scss'\nimport { BsArrowRepeat } from 'react-icons/bs'\nimport { get } from 'lodash'\n\nexport default function ParsingOptions(props) {\n  const refreshData = async () => {\n    const response = await fetch(props.dataSource.url)\n    props.onDataRefreshed(await response.text())\n  }\n\n  return (\n    <Row>\n      <Col className={styles.parsingOptions}>\n        <b>DATA PARSING OPTIONS</b>\n\n        {props.userDataType === 'csv' && (\n          <SeparatorSelector\n            title=\"Column separator\"\n            value={props.separator}\n            onChange={(nextSeparator) => props.setSeparator(nextSeparator)}\n          />\n        )}\n        <ThousandsSeparatorSelector\n          title=\"Thousands separator\"\n          value={props.thousandsSeparator}\n          onChange={(nextSeparator) =>\n            props.setThousandsSeparator(nextSeparator)\n          }\n        />\n        <DecimalsSeparatorSelector\n          title=\"Decimals separator\"\n          value={props.decimalsSeparator}\n          onChange={(nextSeparator) =>\n            props.setDecimalsSeparator(nextSeparator)\n          }\n        />\n\n        <DateLocaleSelector\n          title=\"Date Locale\"\n          value={props.locale}\n          onChange={(nextLocale) => props.setLocale(nextLocale)}\n        />\n\n        {get(props.dataSource, 'type', '') === 'url' && (\n          <Button\n            color=\"primary\"\n            className={styles['refresh-button']}\n            onClick={() => refreshData()}\n          >\n            <BsArrowRepeat className=\"mr-2\" />\n            {'Refresh data from url'}\n          </Button>\n        )}\n\n        <div className=\"divider mb-3 mt-0\" />\n\n        <b>DATA TRANSFORMATION</b>\n\n        <StackSelector\n          title=\"Stack on\"\n          value={props.stackDimension}\n          list={props.dimensions}\n          onChange={(nextStackDimension) =>\n            props.setStackDimension(nextStackDimension)\n          }\n        />\n      </Col>\n    </Row>\n  )\n}\n","import {\n  alluvialdiagram,\n  arcdiagram,\n  barchart,\n  barchartmultiset,\n  barchartstacked,\n  beeswarm,\n  boxplot,\n  bubblechart,\n  bumpchart,\n  circlepacking,\n  circularDendrogram,\n  contourPlot,\n  convexHull,\n  dendrogram,\n  hexagonalBinning,\n  linechart,\n  matrixplot,\n  radarchart,\n  sankeydiagram,\n  streamgraph,\n  sunburst,\n  treemap,\n  violinplot,\n  ganttChart,\n} from '@rawgraphs/rawgraphs-charts'\n\n// New charts, not included into first release.\n// Comment at necessity.\nlet charts = [\n  alluvialdiagram,\n  arcdiagram,\n  barchart,\n  barchartmultiset,\n  barchartstacked,\n  beeswarm,\n  boxplot,\n  bubblechart,\n  bumpchart,\n  circlepacking,\n  circularDendrogram,\n  contourPlot,\n  convexHull,\n  dendrogram,\n  hexagonalBinning,\n  linechart,\n  matrixplot,\n  radarchart,\n  sankeydiagram,\n  streamgraph,\n  sunburst,\n  treemap,\n  violinplot,\n  ganttChart,\n]\n\nexport default charts\n","import { get, has } from \"lodash\"\nimport charts from \"./charts\"\n\nexport const VERSION = \"1\"\n\nfunction objectsToMatrix(listOfObjects, columns) {\n  return listOfObjects.map(obj => {\n    return columns.map(col => obj[col])\n  })\n}\n\nfunction matrixToObjects(matrix, columns) {\n  return matrix.map(record => {\n    const obj = {}\n    for (let i = 0; i < columns.length; i++) {\n      obj[columns[i]] = record[i]\n    }\n    return obj\n  })\n}\n\nexport function serializeProject(\n  userInput,\n  userData,\n  userDataType,\n  parseError,\n  unstackedData,\n  unstackedColumns,\n  data,\n  separator,\n  thousandsSeparator,\n  decimalsSeparator,\n  locale,\n  stackDimension,\n  dataSource,\n  currentChart,\n  mapping,\n  visualOptions,\n) {\n  const project = {\n    version: \"1\",\n  }\n\n  /* First stage: user input */\n  project.userInput = userInput\n  project.userInputFormat = userDataType\n  project.dataSource = dataSource\n\n  /* Second stage: parsed */\n  project.rawData = objectsToMatrix(userData, Object.keys(data.dataTypes))\n  project.parseError = parseError\n  project.parseOptions = {\n    separator,\n    thousandsSeparator,\n    decimalsSeparator,\n    locale,\n    stackDimension,\n    unstackedData,\n    unstackedColumns\n  }\n\n  /* Third stage: typed data ready for chart */\n  project.dataTypes = data.dataTypes\n\n  /* Chart: mapping and visual options */\n  project.chart = currentChart.metadata.name\n  project.mapping = mapping\n  project.visualOptions = visualOptions\n\n  return project\n}\n\nfunction getOrError(object, path) {\n  if (!has(object, path)) {\n    console.log(\"IMPORT ERROR\", object, path)\n    throw new Error(\"Selected project is not valid\")\n  }\n  return get(object, path)\n}\n\nexport function deserializeProject(project) {\n  if (project.version !== \"1\") {\n    throw new Error(\"Invalid version number, please use a suitable deserializer\")\n  }\n\n  const chartName = getOrError(project, \"chart\")\n  const chart = charts.find(c => c.metadata.name === chartName)\n  if (!chart) {\n    throw new Error(\"Unknown chart!\")\n  }\n\n  return {\n    userInput: getOrError(project, \"userInput\"),\n    userData: matrixToObjects(\n      getOrError(project, \"rawData\"), \n      Object.keys(getOrError(project, \"dataTypes\"))\n    ),\n    userDataType: getOrError(project, \"userInputFormat\"),\n    parseError: getOrError(project, \"parseError\"),\n    unstackedData: getOrError(project, \"parseOptions.unstackedData\"),\n    unstackedColumns: getOrError(project, \"parseOptions.unstackedColumns\"),\n    dataTypes: getOrError(project, \"dataTypes\"),\n    separator: getOrError(project, \"parseOptions.separator\"),\n    thousandsSeparator: getOrError(project, \"parseOptions.thousandsSeparator\"),\n    decimalsSeparator: getOrError(project, \"parseOptions.decimalsSeparator\"),\n    locale: getOrError(project, \"parseOptions.locale\"),\n    stackDimension: get(project, \"parseOptions.stackDimension\", undefined),\n    dataSource: getOrError(project, \"dataSource\"),\n    currentChart: chart,\n    mapping: getOrError(project, \"mapping\"),\n    visualOptions: getOrError(project, \"visualOptions\"),\n  }\n}","import { get, has } from \"lodash\"\nimport charts from \"./charts\"\n\nexport const VERSION = \"1.1\"\n\nfunction objectsToMatrix(listOfObjects, columns) {\n  return listOfObjects.map(obj => {\n    return columns.map(col => obj[col])\n  })\n}\n\nfunction matrixToObjects(matrix, columns) {\n  return matrix.map(record => {\n    const obj = {}\n    for (let i = 0; i < columns.length; i++) {\n      obj[columns[i]] = record[i]\n    }\n    return obj\n  })\n}\n\nexport function serializeProject(\n  userInput,\n  userData,\n  userDataType,\n  parseError,\n  unstackedData,\n  unstackedColumns,\n  data,\n  separator,\n  thousandsSeparator,\n  decimalsSeparator,\n  locale,\n  stackDimension,\n  dataSource,\n  currentChart,\n  mapping,\n  visualOptions,\n) {\n  const project = {\n    version: VERSION,\n  }\n\n  /* First stage: user input */\n  project.userInput = userInput\n  project.userInputFormat = userDataType\n  project.dataSource = dataSource\n\n  /* Second stage: parsed */\n  project.rawData = objectsToMatrix(userData, Object.keys(data.dataTypes))\n  project.parseError = parseError\n  project.parseOptions = {\n    separator,\n    thousandsSeparator,\n    decimalsSeparator,\n    locale,\n    stackDimension,\n    unstackedData,\n    unstackedColumns\n  }\n\n  /* Third stage: typed data ready for chart */\n  project.dataTypes = data.dataTypes\n\n  /* Chart: mapping and visual options */\n  project.chart = currentChart.metadata.id\n  project.mapping = mapping\n  project.visualOptions = visualOptions\n\n  return project\n}\n\nfunction getOrError(object, path) {\n  if (!has(object, path)) {\n    console.log(\"IMPORT ERROR\", object, path)\n    throw new Error(\"Selected project is not valid\")\n  }\n  return get(object, path)\n}\n\nexport function deserializeProject(project) {\n  if (project.version !== VERSION) {\n    throw new Error(\"Invalid version number, please use a suitable deserializer\")\n  }\n\n  const chartId = getOrError(project, \"chart\")\n  const chart = charts.find(c => c.metadata.id === chartId)\n  if (!chart) {\n    throw new Error(\"Unknown chart!\")\n  }\n\n  return {\n    userInput: getOrError(project, \"userInput\"),\n    userData: matrixToObjects(\n      getOrError(project, \"rawData\"), \n      Object.keys(getOrError(project, \"dataTypes\"))\n    ),\n    userDataType: getOrError(project, \"userInputFormat\"),\n    parseError: getOrError(project, \"parseError\"),\n    unstackedData: getOrError(project, \"parseOptions.unstackedData\"),\n    unstackedColumns: getOrError(project, \"parseOptions.unstackedColumns\"),\n    dataTypes: getOrError(project, \"dataTypes\"),\n    separator: getOrError(project, \"parseOptions.separator\"),\n    thousandsSeparator: getOrError(project, \"parseOptions.thousandsSeparator\"),\n    decimalsSeparator: getOrError(project, \"parseOptions.decimalsSeparator\"),\n    locale: getOrError(project, \"parseOptions.locale\"),\n    stackDimension: get(project, \"parseOptions.stackDimension\", undefined),\n    dataSource: getOrError(project, \"dataSource\"),\n    currentChart: chart,\n    mapping: getOrError(project, \"mapping\"),\n    visualOptions: getOrError(project, \"visualOptions\"),\n  }\n}","import React, { useCallback } from 'react'\nimport { Button } from 'react-bootstrap'\nimport { useDropzone } from 'react-dropzone'\nimport classNames from 'classnames'\nimport S from './LoadProject.module.scss'\nimport { get, keyBy } from 'lodash'\nimport * as IO1 from '../../../import_export_v1'\nimport * as IO1_1 from '../../../import_export_v1.1'\n\nconst DESERIALIZERS = keyBy([IO1, IO1_1], 'VERSION')\n\nexport default function LoadProject({ onProjectSelected, setLoadingError }) {\n  // const [error, setError] = useState(null)\n\n  const onDrop = useCallback(\n    (acceptedFiles) => {\n      const reader = new FileReader()\n      reader.addEventListener('load', (e) => {\n        try {\n          const serializedProject = JSON.parse(e.target.result)\n          const version = get(serializedProject, 'version', 'unknown')\n          if (DESERIALIZERS[version]) {\n            try {\n              onProjectSelected(DESERIALIZERS[version].deserializeProject(serializedProject))\n              setLoadingError(null)\n            } catch (e) {\n              // setError(e.message)\n              setLoadingError(\"Can't open your project. \" + e.message)\n            }\n          } else {\n            // setError(\"Invalid file\")\n            setLoadingError(\"Can't open your project. Invalid file\")\n          }\n        } catch (e) {\n          // setError(e.message)\n          setLoadingError(\"Can't open your project. \" + e.message)\n        }\n      })\n      if (acceptedFiles.length) {\n        reader.readAsText(acceptedFiles[0])\n      }\n    },\n    [onProjectSelected, setLoadingError]\n  )\n  const {\n    getRootProps,\n    getInputProps,\n    isDragReject,\n    isDragAccept,\n  } = useDropzone({\n    onDrop,\n    accept: '.rawgraphs',\n    maxFiles: 1,\n  })\n  return (\n    <div\n      className={classNames(S.dropzone, {\n        [S.reject]: isDragReject,\n        [S.accept]: isDragAccept,\n      })}\n      {...getRootProps()}\n    >\n      <input {...getInputProps()} />\n      <span>Drag a file here or </span>\n      <Button className={S['browse-button']} color=\"primary\">\n        Browse\n      </Button>\n      <span>a file from your computer</span>\n      {isDragAccept && <p>All files will be accepted</p>}\n      {isDragReject && <p>Some files will be rejected</p>}\n      {/* {error && <p>{error}</p>} */}\n    </div>\n  )\n}\n","import React from 'react'\n\nexport default function Paste({ userInput, setUserInput, setLoadingError }) {\n  return (\n    <textarea\n      value={userInput}\n      onChange={(e) => {\n        const str = e.target.value\n        setUserInput(str)\n        setLoadingError(null)\n      }}\n      style={{\n        backgroundColor: 'white',\n        border: '1px solid lightgrey',\n        borderRadius: 4,\n        width: '100%',\n        padding: '1rem',\n        minHeight: '250px',\n        height: '40vh',\n      }}\n    />\n  )\n}\n","import React, { useCallback } from 'react'\nimport { Button } from 'react-bootstrap'\nimport { useDropzone } from 'react-dropzone'\nimport classNames from 'classnames'\nimport S from './UploadFile.module.scss'\n\nexport default function UploadFile({\n  setUserInput,\n  setLoadingError,\n}) {\n  const onDrop = useCallback(\n    (acceptedFiles) => {\n      const reader = new FileReader()\n      reader.addEventListener('load', (e) => {\n        setUserInput(e.target.result)\n        setLoadingError(null)\n      })\n      if (acceptedFiles.length) {\n        reader.readAsText(acceptedFiles[0])\n      }\n    },\n    [setLoadingError, setUserInput]\n  )\n  const {\n    getRootProps,\n    getInputProps,\n    isDragReject,\n    isDragAccept,\n  } = useDropzone({\n    onDrop,\n    accept:\n      'text/csv,text/plain,application/json,application/vnd.ms-excel,text/tsv,text/tab-separated-values',\n    maxFiles: 1,\n  })\n  return (\n    <div\n      className={classNames(S.dropzone, {\n        [S.reject]: isDragReject,\n        [S.accept]: isDragAccept,\n      })}\n      {...getRootProps()}\n    >\n      <input {...getInputProps()} />\n      <span>Drag a file here or </span>\n      <Button className={S['browse-button']} color=\"primary\">\n        Browse\n      </Button>\n      <span>a file from your computer</span>\n      {isDragAccept && <p>All files will be accepted</p>}\n      {isDragReject && <p>Some files will be rejected</p>}\n    </div>\n  )\n}\n","import React, { useState } from 'react'\nimport classNames from 'classnames'\nimport S from './UrlFetch.module.scss'\n\nexport default function UrlFetch({ userInput, setUserInput, setLoadingError }) {\n  const [url, setUrl] = useState('')\n\n  const fetchUrl = async (url) => {\n    let response;\n    try {\n      response = await fetch(url)\n    } catch (e) {\n      setLoadingError(\"Loading error. \"+e.message)\n      return\n    }\n    const text = await response.text()\n    setUserInput(text, { type: 'url', url })\n    setLoadingError(null)\n  }\n  return (\n    <input\n      className={classNames('w-100', S['url-input'])}\n      value={url}\n      onChange={(e) => {\n        setUrl(e.target.value)\n        fetchUrl(e.target.value)\n      }}\n    />\n  )\n}\n","import React from 'react'\nimport styles from './DataLoader.module.scss'\n\nexport default function Loading() {\n  return (\n    <div className={styles['loading-component']}>\n      <div className={styles['bg-animated']}/>\n      <p>loading...</p>\n    </div>\n  )\n}","import React from 'react'\nimport { Alert } from 'react-bootstrap'\n/**\n *\n * @param {string} type The warning type: success, secondary, warning, danger\n * @param {string} error The error message to be displayed\n */\nfunction WarningMessage({ variant = \"warning\", message = \"A default warning message.\"}) {\n  return (\n    <Alert variant={variant} className=\"my-2\">\n      {message}\n    </Alert>\n  )\n}\n\nexport default WarningMessage\n","import React, { useState } from 'react'\nimport { Modal, Button } from 'react-bootstrap'\n\nfunction DataMismatchModal({\n  replaceRequiresConfirmation,\n  commitDataReplace,\n  cancelDataReplace,\n}) {\n  const [showModal, setShowModal] = useState(true)\n\n  const handleClose = () => {\n    setShowModal(false)\n  }\n  return (\n    <Modal\n      className=\"raw-modal\"\n      show={showModal}\n      onHide={handleClose}\n      backdrop=\"static\"\n      keyboard={false}\n      // size=\"lg\"\n      aria-labelledby=\"contained-modal-title-vcenter\"\n      centered\n    >\n      <Modal.Header>\n        <Modal.Title as=\"h5\">\n          Warning:{' '}\n          {replaceRequiresConfirmation === 'parse-error' && <>parsing error</>}\n          {replaceRequiresConfirmation.startsWith('missing-column:') && (\n            <>missing column</>\n          )}\n          {replaceRequiresConfirmation === 'type-mismatch' && (\n            <>data-type mismatch</>\n          )}\n        </Modal.Title>\n      </Modal.Header>\n\n      <Modal.Body>\n        {replaceRequiresConfirmation === 'parse-error' && (\n          <>\n            <p>There was an error while parsing new data.</p>\n            <p>\n              You can load the new data and try to fix the error or return to\n              the data previously loaded.\n            </p>\n          </>\n        )}\n        {replaceRequiresConfirmation.startsWith('missing-column:') && (\n          <>\n            <p>\n              The data mapping of this project requires the dimension{' '}\n              <span className=\"font-weight-bold\">\n                {replaceRequiresConfirmation.split(':')[1]}\n              </span>\n              , that we can't find in the new data.\n            </p>\n            <p>\n              You can create a new data mapping with the new data or return to\n              the data previously loaded.\n            </p>\n          </>\n        )}\n        {replaceRequiresConfirmation === 'type-mismatch' && (\n          <>\n            <p>\n              The data-types previously set for this project can't be applied to\n              the new data.\n            </p>\n            <p>\n              You can use the new data and re-set data-types or return to the\n              data previously loaded.\n            </p>\n          </>\n        )}\n      </Modal.Body>\n      <Modal.Footer>\n        <Button\n          variant=\"warning\"\n          onClick={() => {\n            commitDataReplace()\n          }}\n        >\n          Load new data\n        </Button>\n        <Button\n          variant=\"secondary\"\n          onClick={() => {\n            cancelDataReplace()\n          }}\n        >\n          Cancel\n        </Button>\n      </Modal.Footer>\n    </Modal>\n  )\n}\n\nexport default DataMismatchModal\n","import { get } from 'lodash'\nimport React, { useCallback, useState } from 'react'\nimport { Col, Row } from 'react-bootstrap'\nimport {\n  BsArrowCounterclockwise,\n  BsArrowRepeat,\n  BsClipboard,\n  BsCloud,\n  BsFolder,\n  BsGift,\n  BsSearch,\n  BsUpload,\n} from 'react-icons/bs'\nimport { DATA_LOADER_MODE } from '../../hooks/useDataLoader'\nimport DataGrid from '../DataGrid/DataGrid'\nimport DataSamples from '../DataSamples/DataSamples'\nimport JsonViewer from '../JsonViewer'\nimport ParsingOptions from '../ParsingOptions'\nimport styles from './DataLoader.module.scss'\nimport LoadProject from './loaders/LoadProject'\nimport Paste from './loaders/Paste'\nimport UploadFile from './loaders/UploadFile'\nimport UrlFetch from './loaders/UrlFetch'\nimport Loading from './loading'\nimport WarningMessage from '../WarningMessage'\nimport DataMismatchModal from './DataMismatchModal'\n\nfunction DataLoader({\n  userInput,\n  setUserInput,\n  userData,\n  userDataType,\n  parseError,\n  unstackedColumns,\n  separator,\n  setSeparator,\n  thousandsSeparator,\n  setThousandsSeparator,\n  decimalsSeparator,\n  setDecimalsSeparator,\n  locale,\n  setLocale,\n  stackDimension,\n  dataSource,\n  data,\n  loading,\n  coerceTypes,\n  loadSample,\n  handleInlineEdit,\n  handleStackOperation,\n  setJsonData,\n  resetDataLoader,\n  dataLoaderMode,\n  startDataReplace,\n  cancelDataReplace,\n  commitDataReplace,\n  replaceRequiresConfirmation,\n  hydrateFromProject,\n}) {\n  const [loadingError, setLoadingError] = useState()\n  const options = [\n    {\n      id: 'paste',\n      name: 'Paste your data',\n      loader: (\n        <Paste\n          userInput={userInput}\n          setUserInput={(rawInput) => setUserInput(rawInput, { type: 'paste' })}\n          setLoadingError={setLoadingError}\n        />\n      ),\n      message:\n        'Copy and paste your data from other applications or websites. You can use tabular (TSV, CSV, DSV) or JSON data.',\n      icon: BsClipboard,\n      allowedForReplace: true,\n    },\n    {\n      id: 'upload',\n      name: 'Upload your data',\n      loader: (\n        <UploadFile\n          userInput={userInput}\n          setUserInput={(rawInput) => setUserInput(rawInput, { type: 'file' })}\n          setLoadingError={setLoadingError}\n        />\n      ),\n      message: 'You can load tabular (TSV, CSV, DSV) or JSON data.',\n      icon: BsUpload,\n      allowedForReplace: true,\n    },\n    {\n      id: 'samples',\n      name: 'Try our data samples',\n      message: '',\n      loader: (\n        <DataSamples\n          onSampleReady={loadSample}\n          setLoadingError={setLoadingError}\n        />\n      ),\n      icon: BsGift,\n      allowedForReplace: true,\n    },\n    {\n      id: 'sparql',\n      name: 'SPARQL query SOON!',\n      message: 'Load data from a query address.',\n      loader: <DataSamples onSampleReady={loadSample} />,\n      icon: BsCloud,\n      disabled: true,\n      allowedForReplace: true,\n    },\n    {\n      id: 'url',\n      name: 'From URL',\n      message:\n        'Enter a web address (URL) pointing to the data (e.g. a public Dropbox file, a public API, ...). Please, be sure the server is CORS-enabled.',\n      loader: (\n        <UrlFetch\n          userInput={userInput}\n          setUserInput={(rawInput, source) => setUserInput(rawInput, source)}\n          setLoadingError={setLoadingError}\n        />\n      ),\n      icon: BsSearch,\n      disabled: false,\n      allowedForReplace: true,\n    },\n    {\n      id: 'project',\n      name: 'Open your project',\n      message: 'Load a .rawgraphs project.',\n      loader: (\n        <LoadProject\n          onProjectSelected={hydrateFromProject}\n          setLoadingError={setLoadingError}\n        />\n      ),\n      icon: BsFolder,\n      allowedForReplace: false,\n    },\n  ]\n  const [optionIndex, setOptionIndex] = useState(0)\n  const selectedOption = options[optionIndex]\n\n  let mainContent\n  if (userData && data) {\n    mainContent = (\n      <DataGrid\n        userDataset={userData}\n        dataset={data.dataset}\n        errors={data.errors}\n        dataTypes={data.dataTypes}\n        coerceTypes={coerceTypes}\n        onDataUpdate={handleInlineEdit}\n      />\n    )\n  } else if (userDataType === 'json' && userData === null) {\n    mainContent = (\n      <JsonViewer\n        context={JSON.parse(userInput)}\n        selectFilter={(ctx) => Array.isArray(ctx)}\n        onSelect={(ctx) => {\n          setJsonData(ctx)\n        }}\n      />\n    )\n  } else if (loading && !data) {\n    mainContent = <Loading />\n  } else {\n    mainContent = (\n      <>\n        {selectedOption.loader}\n        <p className=\"mt-3\">\n          {selectedOption.message}\n          {/*<a\n            href=\"https://rawgraphs.io/learning\"\n            target=\"_blank\"\n            rel=\"noopener noreferrer\"\n          >\n            Check out our guides\n          </a>*/}\n        </p>\n      </>\n    )\n  }\n\n  // #TODO: memoize/move to component?\n  function parsingErrors(data) {\n    const errors = get(data, 'errors', [])\n    const successRows = data.dataset.length - errors.length\n    const row = errors[0].row + 1\n    const column = Object.keys(errors[0].error)[0]\n    return (\n      <span>\n        Ops, please check <span className=\"font-weight-bold\">row {row}</span> at\n        column <span className=\"font-weight-bold\">{column}</span>.{' '}\n        {errors.length === 2 && (\n          <>\n            {' '}\n            There's another issue at row{' '}\n            <span className=\"font-weight-bold\">{errors[1].row + 1}</span>.{' '}\n          </>\n        )}\n        {errors.length > 2 && (\n          <>\n            {' '}\n            There are issues in{' '}\n            <span className=\"font-weight-bold\">{errors.length - 1}</span> more\n            rows.{' '}\n          </>\n        )}\n        {successRows > 0 && (\n          <>\n            The remaining{' '}\n            <span className=\"font-weight-bold\">\n              {successRows} row{successRows > 1 && <>s</>}\n            </span>{' '}\n            look{successRows === 1 && <>s</>} fine.\n          </>\n        )}\n      </span>\n    )\n  }\n\n  const reloadRAW = useCallback(() => {\n    window.location.replace(window.location.pathname)\n  }, [])\n\n  return (\n    <>\n      <Row>\n        {!userData && (\n          <Col\n            xs={3}\n            lg={2}\n            className=\"d-flex flex-column justify-content-start pl-3 pr-0 options\"\n          >\n            {options\n              .filter((opt) => {\n                return (\n                  dataLoaderMode !== DATA_LOADER_MODE.REPLACE ||\n                  opt.allowedForReplace\n                )\n              })\n              .map((d, i) => {\n                const classnames = [\n                  'w-100',\n                  'd-flex',\n                  'align-items-center',\n                  'user-select-none',\n                  'cursor-pointer',\n                  styles['loading-option'],\n                  d.disabled ? styles['disabled'] : null,\n                  d.id === selectedOption.id && !userDataType\n                    ? styles.active\n                    : null,\n                  userDataType ? styles.disabled : null,\n                ]\n                  .filter((c) => c !== null)\n                  .join(' ')\n                return (\n                  <div\n                    key={d.id}\n                    className={classnames}\n                    onClick={() => setOptionIndex(i)}\n                  >\n                    <d.icon className=\"w-25\" />\n                    <h4 className=\"m-0 d-inline-block\">{d.name}</h4>\n                  </div>\n                )\n              })}\n\n            {dataLoaderMode === DATA_LOADER_MODE.REPLACE && (\n              <>\n                <div className=\"divider mb-3 mt-0\" />\n                <div\n                  className={`w-100 mb-2 d-flex justify-content-center align-items-center ${styles['start-over']} user-select-none cursor-pointer`}\n                  onClick={reloadRAW}\n                >\n                  <BsArrowRepeat className=\"mr-2\" />\n                  <h4 className=\"m-0 d-inline-block\">{'Reset'}</h4>\n                </div>\n\n                <div\n                  className={`w-100 d-flex justify-content-center align-items-center ${styles['start-over']} ${styles['cancel']} user-select-none cursor-pointer mb-3`}\n                  onClick={() => {\n                    cancelDataReplace()\n                  }}\n                >\n                  <h4 className=\"m-0 d-inline-block\">{'Cancel'}</h4>\n                </div>\n              </>\n            )}\n          </Col>\n        )}\n        {userData && (\n          <Col\n            xs={3}\n            lg={2}\n            className=\"d-flex flex-column justify-content-start pl-3 pr-0 options\"\n          >\n            <ParsingOptions\n              locale={locale}\n              setLocale={setLocale}\n              separator={separator}\n              setSeparator={setSeparator}\n              thousandsSeparator={thousandsSeparator}\n              setThousandsSeparator={setThousandsSeparator}\n              decimalsSeparator={decimalsSeparator}\n              setDecimalsSeparator={setDecimalsSeparator}\n              dimensions={data ? unstackedColumns || data.dataTypes : []}\n              stackDimension={stackDimension}\n              setStackDimension={handleStackOperation}\n              userDataType={userDataType}\n              dataSource={dataSource}\n              onDataRefreshed={(rawInput) => setUserInput(rawInput, dataSource)}\n            />\n\n            <div className=\"divider mb-3 mt-0\" />\n\n            <div\n              className={`w-100 mb-2 d-flex justify-content-center align-items-center ${styles['start-over']} user-select-none cursor-pointer`}\n              onClick={reloadRAW}\n            >\n              <BsArrowRepeat className=\"mr-2\" />\n              <h4 className=\"m-0 d-inline-block\">{'Reset'}</h4>\n            </div>\n\n            <div\n              className={`w-100 d-flex justify-content-center align-items-center ${styles['start-over']} user-select-none cursor-pointer`}\n              onClick={() => {\n                setOptionIndex(0)\n                startDataReplace()\n              }}\n            >\n              <BsArrowCounterclockwise className=\"mr-2\" />\n              <h4 className=\"m-0 d-inline-block\">{'Change data'}</h4>\n            </div>\n          </Col>\n        )}\n        <Col>\n          <Row className=\"h-100\">\n            <Col className=\"h-100\">\n              {mainContent}\n\n              {data && !parseError && get(data, 'errors', []).length === 0 && (\n                <WarningMessage\n                  variant=\"success\"\n                  message={\n                    <span>\n                      <span className=\"font-weight-bold\">\n                        {data.dataset.length} rows\n                      </span>{' '}\n                      (\n                      {data.dataset.length * Object.keys(data.dataTypes).length}{' '}\n                      cells) have been successfully parsed, now you can choose a\n                      chart!\n                    </span>\n                  }\n                />\n              )}\n\n              {parseError && (\n                <WarningMessage variant=\"danger\" message={parseError} />\n              )}\n\n              {get(data, 'errors', []).length > 0 && (\n                <WarningMessage\n                  variant=\"warning\"\n                  message={parsingErrors(data)}\n                />\n              )}\n\n              {loadingError && (\n                <WarningMessage variant=\"danger\" message={loadingError} />\n              )}\n            </Col>\n          </Row>\n        </Col>\n      </Row>\n      {replaceRequiresConfirmation && (\n        <DataMismatchModal\n          replaceRequiresConfirmation={replaceRequiresConfirmation}\n          commitDataReplace={commitDataReplace}\n          cancelDataReplace={cancelDataReplace}\n        />\n      )}\n    </>\n  )\n}\n\nexport default React.memo(DataLoader)\n","import React, { useState, useMemo, useCallback } from 'react'\nimport { Row, Col, Card, Dropdown } from 'react-bootstrap'\nimport { BsLink } from 'react-icons/bs'\nimport uniq from 'lodash/uniq'\nimport styles from './ChartSelector.module.scss'\n\nfunction filterCharts(charts, filter) {\n  return filter === 'All charts'\n    ? charts\n    : charts.filter((d) => d.metadata.categories.indexOf(filter) !== -1)\n}\n\nfunction ChartSelector({ availableCharts, currentChart, setCurrentChart }) {\n  const [filter, setFilter] = useState('All charts')\n\n  const charts = useMemo(() => {\n    return filterCharts(availableCharts, filter)\n  }, [availableCharts, filter])\n\n  const handleFilterChange = useCallback((nextFilter) => {\n    setFilter(nextFilter)\n    const nextCharts = filterCharts(availableCharts, nextFilter)\n    if (nextCharts.indexOf(currentChart) === -1) {\n      setCurrentChart(nextCharts[0])\n    }\n  }, [availableCharts, currentChart, setCurrentChart])\n\n  return (\n    <>\n      <Row>\n        <Col className=\"text-right\">\n          Show\n          <Dropdown className=\"d-inline-block ml-2 raw-dropdown\">\n            <Dropdown.Toggle variant=\"white\" className=\"pr-5\">\n              {filter.charAt(0).toUpperCase() + filter.slice(1)}\n            </Dropdown.Toggle>\n            <Dropdown.Menu>\n              <Dropdown.Item\n                key={'All charts'}\n                onClick={() => handleFilterChange('All charts')}\n              >\n                All charts\n              </Dropdown.Item>\n              {uniq(\n                availableCharts.map((d) => d.metadata.categories).flat()\n              ).map((d) => {\n                return (\n                  <Dropdown.Item key={d} onClick={() => handleFilterChange(d)}>\n                    {d.charAt(0).toUpperCase() + d.slice(1)}\n                  </Dropdown.Item>\n                )\n              })}\n            </Dropdown.Menu>\n          </Dropdown>\n        </Col>\n      </Row>\n      <Row>\n        <Col xs={3} className=\"pt-3\">\n          {currentChart && (\n            <Card className={styles.currentChart}>\n              <Card.Img variant=\"top\" src={currentChart.metadata.thumbnail} />\n              <Card.Body>\n                <Card.Title className=\"m-0\">\n                  <h2 className=\"m-0\">{currentChart.metadata.name}</h2>\n                </Card.Title>\n                <Card.Subtitle className=\"m-0\">\n                  <h4 className=\"mb-2\">{currentChart.metadata.category}</h4>\n                </Card.Subtitle>\n                <Card.Text>{currentChart.metadata.description}</Card.Text>\n                <Card.Link\n                  className={`${styles.disabled} underlined`}\n                  href={currentChart.metadata.code}\n                  target=\"_blank\"\n                >\n                  <BsLink color=\"black\" /> Code\n                </Card.Link>\n                <Card.Link\n                  className={`${styles.disabled} underlined`}\n                  href={currentChart.metadata.tutorial}\n                  target=\"_blank\"\n                >\n                  <BsLink color=\"black\" /> Tutorial\n                </Card.Link>\n              </Card.Body>\n            </Card>\n          )}\n        </Col>\n        <Col>\n          <Row>\n            {charts.map((d, i) => {\n              return (\n                <Col xs={4} key={'chart-' + i} className={`p-3`}>\n                  <Card\n                    onClick={() => {\n                      setCurrentChart(d)\n                    }}\n                    className={`flex-row h-100 cursor-pointer ${\n                      d === currentChart ? 'active' : ''\n                    }`}\n                  >\n                    <div\n                      className={`h-100 w-25 ${styles.thumbnail}`}\n                      style={{ backgroundImage: `url(\"${d.metadata.icon}\")` }}\n                    ></div>\n                    <Card.Body className=\"w-75 px-2 py-3\">\n                      <Card.Title className=\"m-0\">\n                        <h2 className=\"m-0\" style={{ whiteSpace: 'nowrap' }}>\n                          {d.metadata.name}\n                        </h2>\n                      </Card.Title>\n                      <Card.Subtitle className=\"m-0\">\n                        <h4 className=\"m-0\">\n                          {d.metadata.categories\n                            .join(', ')\n                            .charAt(0)\n                            .toUpperCase() +\n                            d.metadata.categories.join(', ').slice(1)}\n                        </h4>\n                      </Card.Subtitle>\n                    </Card.Body>\n                  </Card>\n                </Col>\n              )\n            })}\n          </Row>\n        </Col>\n      </Row>\n    </>\n  )\n}\n\nexport default React.memo(ChartSelector)\n","import React from 'react'\nimport { dataTypeIcons } from '../../constants'\nimport { getTypeName } from '@rawgraphs/rawgraphs-core'\n\nimport { useDrag } from 'react-dnd'\n\nimport styles from './DataMapping.module.scss'\n\nconst ColumnCard = ({\n  dimensionName,\n  dimensionType,\n  commitLocalMapping,\n  rollbackLocalMapping,\n}) => {\n  const [{ isDragging }, drag] = useDrag({\n    item: { id: dimensionName, type: 'column' },\n    collect: (monitor) => ({\n      isDragging: !!monitor.isDragging(),\n    }),\n    end: (dropResult, monitor) => {\n      const didDrop = monitor.didDrop()\n      if (didDrop) {\n        commitLocalMapping()\n      } else {\n        rollbackLocalMapping()\n      }\n      // console.log('DID DROP', didDrop)\n    },\n  })\n\n  const dimType = getTypeName(dimensionType)\n  const DataTypeIcon = dataTypeIcons[dimType]\n\n  return (\n    <div\n      ref={drag}\n      className={`column-card ${styles['column-card']} ${\n        isDragging ? 'is-dragging' : ''\n      }`}\n    >\n      <DataTypeIcon className={styles['data-type-icon']} />\n      <span className={styles['column-title']}>{dimensionName}</span>\n    </div>\n  )\n}\n\nexport default ColumnCard\n","import React from 'react'\nimport { Tooltip, OverlayTrigger } from 'react-bootstrap'\nimport { dataTypeIcons } from '../../constants'\nimport styles from './DataMapping.module.scss'\n\nfunction DataTypeIcon({ type }) {\n  const DataTypeIcon = dataTypeIcons[type]\n  return (\n    <span>\n      <OverlayTrigger\n        key=\"top\"\n        placement=\"top\"\n        overlay={\n          <Tooltip id={`tooltip-top`}>\n            Accepts {type}s\n          </Tooltip>\n        }\n      >\n        <DataTypeIcon className={styles['accepted-type-icon']} />\n      </OverlayTrigger>\n    </span>\n  )\n}\n\nexport default DataTypeIcon\n","function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nimport React from \"react\";\n\nvar _ref2 =\n/*#__PURE__*/\nReact.createElement(\"path\", {\n  d: \"M8 0a1 1 0 0 1 1 1v5.268l4.562-2.634a1 1 0 1 1 1 1.732L10 8l4.562 2.634a1 1 0 1 1-1 1.732L9 9.732V15a1 1 0 1 1-2 0V9.732l-4.562 2.634a1 1 0 1 1-1-1.732L6 8 1.438 5.366a1 1 0 0 1 1-1.732L7 6.268V1a1 1 0 0 1 1-1z\"\n});\n\nvar SvgAsterisk = function SvgAsterisk(_ref) {\n  var svgRef = _ref.svgRef,\n      title = _ref.title,\n      props = _objectWithoutProperties(_ref, [\"svgRef\", \"title\"]);\n\n  return React.createElement(\"svg\", _extends({\n    width: 16,\n    height: 16,\n    fill: \"currentColor\",\n    className: \"bi bi-asterisk\",\n    viewBox: \"0 0 16 16\",\n    ref: svgRef\n  }, props), title ? React.createElement(\"title\", null, title) : null, _ref2);\n};\n\nvar ForwardRef = React.forwardRef(function (props, ref) {\n  return React.createElement(SvgAsterisk, _extends({\n    svgRef: ref\n  }, props));\n});\nexport default __webpack_public_path__ + \"static/media/asterisk.b07fc856.svg\";\nexport { ForwardRef as ReactComponent };","import React from 'react'\nimport { ReactComponent as Asterisk } from './asterisk.svg'\nimport { Tooltip, OverlayTrigger } from 'react-bootstrap'\n\nfunction RequiredIcon() {\n  return (\n    <OverlayTrigger\n      key=\"top\"\n      placement=\"top\"\n      overlay={<Tooltip id={`tooltip-top`}>Mandatory</Tooltip>}\n    >\n      <Asterisk width=\"1rem\" height=\"1rem\" style={{marginRight:\"2px\"}} />\n    </OverlayTrigger>\n  )\n}\n\nexport default RequiredIcon\n","import React, { useRef } from 'react'\nimport { Dropdown } from 'react-bootstrap'\nimport classnames from 'classnames'\nimport styles from './DataMapping.module.scss'\nimport { BsX } from 'react-icons/bs'\nimport { useDrag, useDrop } from 'react-dnd'\nimport get from 'lodash/get'\nimport { AGGREGATIONS_LABELS } from '../../constants'\n\nexport default function ChartDimensionItem({\n  draggingColumn,\n  index,\n  isValid,\n  DataTypeIcon,\n  columnId,\n  dimension,\n  aggregators,\n  relatedAggregation,\n  onMove,\n\n  onChangeAggregation,\n  onDeleteItem,\n  onChangeDimension,\n\n  commitLocalMapping,\n  rollbackLocalMapping,\n  onInsertColumn,\n  replaceDimension,\n\n  localMappding,\n}) {\n  const ref = useRef(null)\n\n  const [{ isOver }, drop] = useDrop({\n    accept: ['column', 'card'],\n    collect: (monitor) => {\n      return {\n        isOver: monitor.isOver() && monitor.getItem().type === 'column',\n      }\n    },\n    hover(item, monitor) {\n      if (!dimension.multiple) {\n        return\n      }\n      if (!ref.current) {\n        return\n      }\n\n      const hoverIndex = index\n\n      //#TODO: for now we allow only dropping on \"drop another dimension here\" in case of multiple dimensions\n      if (false && item.type === 'column') {\n        onInsertColumn(hoverIndex, item)\n        item.type = 'card'\n        item.dimensionId = dimension.id\n        item.index = hoverIndex\n        return\n      } else if (item.dimensionId === dimension.id) {\n        const dragIndex = item.index\n        // Don't replace items with themselves\n        if (dragIndex === hoverIndex) {\n          return\n        }\n        // Determine rectangle on screen\n        const hoverBoundingRect = ref.current?.getBoundingClientRect()\n        // Get vertical middle\n        const hoverMiddleY =\n          (hoverBoundingRect.bottom - hoverBoundingRect.top) / 2\n        // Determine mouse position\n        const clientOffset = monitor.getClientOffset()\n        // Get pixels to the top\n        const hoverClientY = clientOffset.y - hoverBoundingRect.top\n        // Only perform the move when the mouse has crossed half of the items height\n        // When dragging downwards, only move when the cursor is below 50%\n        // When dragging upwards, only move when the cursor is above 50%\n        // Dragging downwards\n        if (dragIndex < hoverIndex && hoverClientY < hoverMiddleY) {\n          return\n        }\n        // Dragging upwards\n        if (dragIndex > hoverIndex && hoverClientY > hoverMiddleY) {\n          return\n        }\n        onMove(dragIndex, hoverIndex)\n        // Note: we're mutating the monitor item here!\n        // Generally it's better to avoid mutations,\n        // but it's good here for the sake of performance\n        // to avoid expensive index searches.\n        item.index = hoverIndex\n      } else {\n        //#TODO: for now we allow only dropping on \"drop another dimension here\" in case of multiple dimensions\n\n        // replaceDimension(\n        //   item.dimensionId,\n        //   dimension.id,\n        //   item.index,\n        //   index,\n        //   true\n        // )\n        // item.dimensionId = dimension.id\n        // item.index = hoverIndex\n        return\n      }\n    },\n    drop: (item, monitor) => {\n      if (!dimension.multiple) {\n        if (item.type === 'column') {\n          onChangeDimension(index, item.id)\n        } else {\n          replaceDimension(item.dimensionId, dimension.id, item.index, index)\n        }\n      }\n    },\n  })\n\n  const [{ isDragging }, drag] = useDrag({\n    item: { type: 'card', index, id: columnId, dimensionId: dimension.id },\n    collect: (monitor) => ({\n      isDragging: monitor.isDragging(),\n    }),\n    end: (dropResult, monitor) => {\n      const didDrop = monitor.didDrop()\n      if (didDrop) {\n        commitLocalMapping()\n      } else {\n        rollbackLocalMapping()\n      }\n    },\n  })\n\n  drag(drop(ref))\n\n  return (\n    <div\n      ref={ref}\n      style={{\n        opacity: isDragging || draggingColumn ? 0.5 : 1,\n      }}\n      className={classnames(\n        'assigned-column',\n        styles['column-card'],\n        styles['assigned-column'],\n        isValid ? styles['column-valid'] : styles['column-invalid'],\n        {\n          'border border-danger': isOver,\n          // 'border border-warning': isDragging,\n        }\n      )}\n    >\n      <span>\n        {!!DataTypeIcon && (\n          <DataTypeIcon className={styles['data-type-icon']} />\n        )}\n      </span>\n      <span className={styles['column-title']}>{columnId}</span>\n      {dimension.aggregation && (\n        <Dropdown className=\"d-inline-block ml-2 raw-dropdown\">\n          <Dropdown.Toggle\n            variant={isValid ? 'primary' : 'danger'}\n            className=\"pr-5\"\n          >\n            {get(AGGREGATIONS_LABELS, relatedAggregation, relatedAggregation)}\n          </Dropdown.Toggle>\n          <Dropdown.Menu>\n            {aggregators.map((aggregatorName) => (\n              <Dropdown.Item\n                key={aggregatorName}\n                onClick={() => onChangeAggregation(index, aggregatorName)}\n              >\n                {get(AGGREGATIONS_LABELS, aggregatorName, aggregatorName)}\n              </Dropdown.Item>\n            ))}\n          </Dropdown.Menu>\n        </Dropdown>\n      )}\n      <button\n        className={styles['remove-assigned']}\n        type=\"button\"\n        onClick={() => onDeleteItem(index)}\n      >\n        <BsX />\n      </button>\n    </div>\n  )\n}\n","import React, { useCallback } from 'react'\nimport DataTypeIcon from './DataTypeIcon'\nimport RequiredIcon from './RequiredIcon'\nimport { Col } from 'react-bootstrap'\nimport { useDrop } from 'react-dnd'\nimport get from 'lodash/get'\nimport uniqueId from 'lodash/uniqueId'\nimport classnames from 'classnames'\nimport arrayMove from 'array-move'\nimport arrayInsert from 'array-insert'\n\n// import { DATATYPE_ICONS } from \"../../constants\"\nimport { dataTypeIcons } from '../../constants'\nimport {\n  getTypeName,\n  getAggregatorNames,\n  getDefaultDimensionAggregation,\n} from '@rawgraphs/rawgraphs-core'\nimport ChartDimensionItem from './ChartDimensionItem'\n\nimport styles from './DataMapping.module.scss'\nconst aggregators = getAggregatorNames()\nconst emptyList = []\n\nconst ChartDimensionCard = ({\n  dimension,\n  dataTypes,\n  mapping,\n  setMapping,\n  commitLocalMapping,\n  rollbackLocalMapping,\n  draggingId,\n  setDraggingId,\n  replaceDimension,\n  localMappding,\n}) => {\n  const [{ isOver }, drop] = useDrop({\n    accept: ['column', 'card'],\n    collect: (monitor) => ({\n      isOver: monitor.isOver(),\n    }),\n    drop: (item, monitor) => {\n      if (item.type === 'column') {\n        const defaulAggregation = dimension.aggregation\n          ? getDefaultDimensionAggregation(dimension, dataTypes[item.id])\n          : null\n\n        const columnDataType = getTypeName(dataTypes[item.id]);\n        const isValid =\n          dimension.validTypes?.length === 0 ||\n          dimension.validTypes?.includes(columnDataType)\n\n        setMapping({\n          ...mapping,\n          ids: (mapping.ids || []).concat(uniqueId()),\n          value: [...(mapping.value || []), item.id],\n          isValid: isValid,\n          mappedType: columnDataType,\n          config: dimension.aggregation\n            ? {\n                aggregation: [\n                  ...(get(mapping, 'config.aggregation') || []),\n                  defaulAggregation,\n                ],\n              }\n            : undefined,\n        })\n      } else if (item.dimensionId !== dimension.id) {\n        replaceDimension(\n          item.dimensionId,\n          dimension.id,\n          item.index,\n          mapping.value ? mapping.value.length : 0,\n          true\n        )\n      }\n    },\n  })\n\n  // const [collectedProps, drag] = useDrag({\n  //   item: {\n  //     type: 'card',\n\n  //   }\n  // })\n\n  const setAggregation = useCallback(\n    (newAggregations) => {\n      setMapping({\n        ...mapping,\n        config: { aggregation: [...newAggregations] },\n      })\n    },\n    [mapping, setMapping]\n  )\n\n  const idsMappedHere = get(mapping, 'ids', emptyList)\n  const columnsMappedHere = get(mapping, 'value', emptyList)\n  let aggregationsMappedHere = get(mapping, 'config.aggregation', emptyList)\n\n  const onChangeAggregation = useCallback(\n    (i, aggregatorName) => {\n      const newAggregations = [...aggregationsMappedHere]\n      newAggregations[i] = aggregatorName\n      setAggregation(newAggregations)\n    },\n    [aggregationsMappedHere, setAggregation]\n  )\n\n  const onDeleteItem = useCallback(\n    (i) => {\n      let nextConfig\n      if (mapping.config) {\n        nextConfig = {\n          ...mapping.config,\n          aggregation: mapping.config.aggregation.filter((col, j) => j !== i),\n        }\n      }\n\n      setMapping({\n        ...mapping,\n        ids: mapping.ids.filter((col, j) => j !== i),\n        value: mapping.value.filter((col, j) => j !== i),\n        config: nextConfig,\n      })\n    },\n    [mapping, setMapping]\n  )\n\n  const onChangeDimension = useCallback(\n    (i, newCol) => {\n      setMapping({\n        ...mapping,\n        value: mapping.value.map((col, j) => (j === i ? newCol : col)),\n      })\n    },\n    [mapping, setMapping]\n  )\n\n  const onMove = useCallback(\n    (dragIndex, hoverIndex) => {\n      let nextConfig\n      if (mapping.config) {\n        nextConfig = {\n          ...mapping.config,\n          aggregation: arrayMove(\n            mapping.config.aggregation,\n            dragIndex,\n            hoverIndex\n          ),\n        }\n      }\n\n      setMapping(\n        {\n          ...mapping,\n          ids: arrayMove(mapping.ids, dragIndex, hoverIndex),\n          value: arrayMove(mapping.value, dragIndex, hoverIndex),\n          config: nextConfig,\n        },\n        true\n      )\n    },\n    [mapping, setMapping]\n  )\n\n  const onInsertColumn = useCallback(\n    (index, item) => {\n      const defaulAggregation = dimension.aggregation\n        ? getDefaultDimensionAggregation(dimension, dataTypes[item.id])\n        : null\n\n      const nextId = uniqueId()\n      setDraggingId(nextId)\n      setMapping(\n        {\n          ...mapping,\n          ids: arrayInsert(mapping.ids ?? [], index, nextId),\n          value: arrayInsert(mapping.value ?? [], index, item.id),\n          config: dimension.aggregation\n            ? {\n                aggregation: arrayInsert(\n                  get(mapping, 'config.aggregation', []),\n                  index,\n                  defaulAggregation\n                ),\n              }\n            : undefined,\n        },\n        true\n      )\n    },\n    [dataTypes, dimension, mapping, setDraggingId, setMapping]\n  )\n\n  return (\n    // <div\n    //   className=\"Xcard Xp-3 Xm-2 \"\n    //   style={{ minWidth: 250 }}\n    // >\n\n    <Col xs={6} lg={4} xl={4}>\n      <div className={styles['chart-dimension'] + ' user-select-none'}>\n        {/* This is the card header */}\n        <div\n          className={`d-flex flex-row justify-content-between align-items-center ${styles['chart-dimension-header']}`}\n        >\n          <span className=\"text-left\">\n            {dimension.validTypes.map((t) => {\n              return <DataTypeIcon key={t} type={t} />\n              // const DataTypeIcon = dataTypeIcons[t]\n              // return (\n              //   <span key={t}>\n              //     <DataTypeIcon className={styles['accepted-type-icon']} />\n              //   </span>\n              // )\n            })}\n          </span>\n          <span className=\"text-capitalize text-center\">{dimension.name}</span>\n          <span\n            className={styles['dimension-required'] + ' text-right'}\n            style={{ opacity: dimension.required ? 1 : 0 }}\n          >\n            {dimension.required && <RequiredIcon />}\n          </span>\n        </div>\n\n        {/* These are the columns that have been dropped on the current dimension */}\n        {idsMappedHere.map((renderId, i) => {\n          const columnId = columnsMappedHere[i]\n          const columnDataType = getTypeName(dataTypes[columnId])\n          const relatedAggregation = dimension.aggregation\n            ? aggregationsMappedHere[i] ||\n              getDefaultDimensionAggregation(dimension, columnDataType)\n            : undefined\n          const isValid =\n            dimension.validTypes?.length === 0 ||\n            dimension.validTypes?.includes(columnDataType)\n\n          const DataTypeIcon = dataTypeIcons[getTypeName(dataTypes[columnId])]\n\n          return (\n            <ChartDimensionItem\n              id={renderId}\n              key={renderId}\n              index={i}\n              onMove={onMove}\n              onChangeDimension={onChangeDimension}\n              onChangeAggregation={onChangeAggregation}\n              onDeleteItem={onDeleteItem}\n              isValid={isValid}\n              DataTypeIcon={DataTypeIcon}\n              columnId={columnId}\n              dimension={dimension}\n              aggregators={aggregators}\n              relatedAggregation={relatedAggregation}\n              commitLocalMapping={commitLocalMapping}\n              rollbackLocalMapping={rollbackLocalMapping}\n              onInsertColumn={onInsertColumn}\n              draggingColumn={draggingId === renderId}\n              replaceDimension={replaceDimension}\n              localMappding={localMappding}\n            />\n          )\n        })}\n\n        {/* This is the dropzone */}\n        {(dimension.multiple || columnsMappedHere.length === 0) && (\n          <div\n            className={classnames('dropzone', styles['dropzone'], {\n              [styles['active']]: isOver,\n            })}\n            ref={drop}\n          >\n            {!dimension.multiple && 'Drop dimension here'}\n            {dimension.multiple &&\n              columnsMappedHere.length === 0 &&\n              'Drop dimensions here'}\n            {dimension.multiple &&\n              columnsMappedHere.length > 0 &&\n              'Drop another dimension here'}\n          </div>\n        )}\n      </div>\n    </Col>\n  )\n}\n\nexport default ChartDimensionCard\n","import React, {\n  useCallback,\n  useEffect,\n  useImperativeHandle,\n  useRef,\n  useState,\n} from 'react'\nimport { Row, Col } from 'react-bootstrap'\nimport map from 'lodash/map'\nimport { HTML5Backend } from 'react-dnd-html5-backend'\nimport { DndProvider } from 'react-dnd'\nimport ColumnCard from './ColumnCard'\nimport ChartDimensionCard from './ChartDimensionCard'\nimport get from 'lodash/get'\nimport uniqueId from 'lodash/uniqueId'\nimport arrayInsert from 'array-insert'\nimport { getDefaultDimensionAggregation } from '@rawgraphs/rawgraphs-core'\n\nfunction removeIndex(mapping, i) {\n  let nextConfig\n  if (mapping.config) {\n    nextConfig = {\n      ...mapping.config,\n      aggregation: mapping.config.aggregation.filter((col, j) => j !== i),\n    }\n  }\n\n  return {\n    ...mapping,\n    ids: mapping.ids.filter((col, j) => j !== i),\n    value: mapping.value.filter((col, j) => j !== i),\n    config: nextConfig,\n  }\n}\n\nfunction arrayReplace(arr, i, value) {\n  return arr.map((item, j) => (j === i ? value : item))\n}\n\nfunction handleReplaceLocalMapping(\n  nextId,\n  prev,\n  fromDimension,\n  toDimension,\n  fromIndex,\n  toIndex,\n  dimensions,\n  dataTypes,\n  multiple = false\n) {\n  const removedItem = {}\n  removedItem.aggregation =\n    prev[fromDimension]?.config?.aggregation?.[fromIndex]\n  removedItem.value = prev[fromDimension].value[fromIndex]\n\n  let moveFn = multiple ? arrayInsert : arrayReplace\n\n  const prevToMapping = prev[toDimension] || {}\n  const toDimensionMapping = {\n    ...prevToMapping,\n    ids: moveFn(prevToMapping.ids ?? [], toIndex, nextId),\n    value: moveFn(prevToMapping.value ?? [], toIndex, removedItem.value),\n  }\n\n  const dimension = dimensions[toDimension]\n  if (dimensions.aggregation) {\n    let newAggregation\n    if (removedItem.aggregation) {\n      newAggregation = removedItem.aggregation\n    } else {\n      newAggregation = getDefaultDimensionAggregation(\n        dimension,\n        dataTypes[removedItem.value]\n      )\n    }\n    toDimensionMapping.config = {\n      aggregation: moveFn(\n        get(prevToMapping, 'config.aggregation', []),\n        toIndex,\n        newAggregation\n      ),\n    }\n  }\n  const obj = {\n    ...prev,\n    [fromDimension]: removeIndex(prev[fromDimension], fromIndex),\n    [toDimension]: toDimensionMapping,\n  }\n  return obj\n}\n\nfunction DataMapping({ dataTypes, dimensions, mapping, setMapping }, ref) {\n  const [localMappding, setLocalMapping] = useState(mapping)\n\n  const updateMapping = useCallback(\n    (dimension, mappingConf, isLocal) => {\n      // Local\n      setLocalMapping((prev) => ({\n        ...prev,\n        [dimension]: mappingConf,\n      }))\n      if (!isLocal) {\n        // Gloab mapping\n        setMapping((prev) => ({\n          ...prev,\n          [dimension]: mappingConf,\n        }))\n      }\n    },\n    [setMapping]\n  )\n  const replaceDimension = useCallback(\n    (fromDimension, toDimension, fromIndex, toIndex, multiple = false) => {\n      const nextId = uniqueId()\n      if (multiple) {\n        setDraggingId(nextId)\n      }\n      setLocalMapping((prev) => {\n        return handleReplaceLocalMapping(\n          nextId,\n          prev,\n          fromDimension,\n          toDimension,\n          fromIndex,\n          toIndex,\n          dimensions,\n          dataTypes,\n          multiple\n        )\n      })\n      if (!multiple) {\n        setMapping((prev) => {\n          return handleReplaceLocalMapping(\n            nextId,\n            prev,\n            fromDimension,\n            toDimension,\n            fromIndex,\n            toIndex,\n            dimensions,\n            dataTypes\n          )\n        })\n      }\n    },\n    [dataTypes, dimensions, setMapping]\n  )\n\n  const [draggingId, setDraggingId] = useState(null)\n\n  const rollbackLocalMapping = useCallback(() => {\n    setLocalMapping(mapping)\n    setDraggingId(null)\n  }, [mapping])\n\n  // const commitLocalMapping = useCallback(() => {\n  //   console.log('COMMIT!', localMappding)\n  //   setMapping(localMappding)\n  //   setDraggingId(null)\n  // }, [localMappding, setMapping])\n  const commitLocalMapping = () => {\n    // setMapping()\n    setMapping(lastMapping.current)\n    setDraggingId(null)\n  }\n\n  const lastMapping = useRef()\n  useEffect(() => {\n    lastMapping.current = localMappding\n  })\n\n  useImperativeHandle(ref, () => ({\n    clearLocalMapping: () => {\n      setLocalMapping({})\n    },\n  }))\n\n  return (\n    <DndProvider backend={HTML5Backend}>\n      <Row>\n        <Col xs={3}>\n          <h5 className=\"text-uppercase\">Dimensions</h5>\n          {map(dataTypes, (dataType, columnName) => {\n            return (\n              <ColumnCard\n                key={columnName}\n                dimensionName={columnName}\n                dimensionType={dataType}\n                commitLocalMapping={commitLocalMapping}\n                rollbackLocalMapping={rollbackLocalMapping}\n              />\n            )\n          })}\n        </Col>\n        <Col>\n          <h5 className=\"text-uppercase\">Chart Variables</h5>\n          <Row\n            className=\"sticky-top\"\n            style={{ top: 'calc(var(--header-height) + 16px)' }}\n          >\n            {dimensions.map((d) => {\n              return (\n                <ChartDimensionCard\n                  key={d.id}\n                  dimension={d}\n                  dataTypes={dataTypes}\n                  // mapping={mapping[d.id] || {}}\n                  mapping={localMappding[d.id] || {}}\n                  setMapping={(mappingConf, isLocal = false) =>\n                    updateMapping(d.id, mappingConf, isLocal)\n                  }\n                  commitLocalMapping={commitLocalMapping}\n                  rollbackLocalMapping={rollbackLocalMapping}\n                  draggingId={draggingId}\n                  setDraggingId={setDraggingId}\n                  replaceDimension={replaceDimension}\n                  localMappding={localMappding}\n                />\n              )\n            })}\n          </Row>\n        </Col>\n      </Row>\n    </DndProvider>\n  )\n}\n\nexport default React.memo(React.forwardRef(DataMapping))\n","import React from 'react'\nimport { Row, Col } from 'react-bootstrap'\nimport isObject from 'lodash/isObject'\n\nconst ChartOptionSelect = ({\n  options = [],\n  value,\n  error,\n  onChange,\n  default: defaultValue,\n  label,\n  ...props\n}) => {\n  return (\n    <Row className={props.className}>\n      <Col xs={6} className=\"d-flex align-items-center nowrap\">{label}</Col>\n      <Col xs={6}>\n        <select\n          className=\"custom-select raw-select\"\n          value={value ?? defaultValue}\n          onChange={(e) => {\n            const stringValue = e.target.value\n            const value =\n              props.type === 'number' ? Number(stringValue) : stringValue\n            onChange(value)\n          }}\n        >\n          {options.map((option) =>\n            isObject(option) ? (\n              <option key={option.value} value={option.value}>\n                {option.label}\n              </option>\n            ) : (\n              <option key={option} value={option}>\n                {option}\n              </option>\n            )\n          )}\n        </select>\n        {error && (\n          <small>\n            <i>{error}</i>\n          </small>\n        )}\n      </Col>\n    </Row>\n  )\n}\n\nexport default React.memo(ChartOptionSelect)\n","import React from 'react'\nimport { Row, Col } from 'react-bootstrap'\nimport ChartOptionSelect from './ChartOptionSelect'\n\nconst ChartOptionNumber = ({\n  value,\n  error,\n  onChange,\n  default: defaultValue,\n  label,\n  isEnabled,\n  ...props\n}) => {\n  if (props.options) {\n    return (\n      <ChartOptionSelect\n        value={value}\n        error={error}\n        onChange={onChange}\n        default={defaultValue}\n        disabled={!isEnabled}\n        label={label}\n        {...props}\n      />\n    )\n  }\n  return (\n    <Row className={props.className}>\n      <Col xs={6} className=\"d-flex align-items-center nowrap\">{label}</Col>\n      <Col xs={6}>\n        <input\n          className=\"w-100 form-control text-field\"\n          type=\"number\"\n          value={value ?? ''}\n          step={props.step}\n          min={props.min}\n          max={props.max}\n          disabled={!isEnabled}\n          onChange={(e) => {\n            const str = e.target.value\n            if (str === '') {\n              onChange(undefined)\n            } else {\n              const n = parseFloat(str)\n              if (!isNaN(n)) {\n                onChange(n)\n              } else {\n                onChange(undefined)\n              }\n            }\n          }}\n          placeholder={defaultValue}\n        />\n      </Col>\n      {error && (\n        <small>\n          <i>{error}</i>\n        </small>\n      )}\n    </Row>\n  )\n}\n\nexport default React.memo(ChartOptionNumber)\n","import React from 'react'\nimport ChartOptionSelect from './ChartOptionSelect'\n\nconst ChartOptionText = ({\n  value,\n  error,\n  onChange,\n  default: defaultValue,\n  label,\n  isEnabled,\n  ...props\n}) => {\n  if (props.options) {\n    return (\n      <ChartOptionSelect\n        value={value}\n        error={error}\n        onChange={onChange}\n        default={defaultValue}\n        label={label}\n        {...props}\n      />\n    )\n  }\n  return (\n    <label className=\"d-block\">\n      <b>{label}</b>\n      <br />\n      <input\n        type=\"text\"\n        value={value ?? ''}\n        step={props.step}\n        disabled={!isEnabled}\n        onChange={(e) => {\n          onChange(e.target.value)\n        }}\n        placeholder={defaultValue}\n      />\n      {error && (\n        <small>\n          <i>{error}</i>\n        </small>\n      )}\n    </label>\n  )\n}\n\nexport default React.memo(ChartOptionText)\n","import React, { useState } from 'react'\nimport styles from './InlineColorPicker.module.scss'\nimport { SketchPicker } from 'react-color'\n\nexport default function InlineColorPicker({ color: maybeColor, onChange, disabled }) {\n  const [displayColorPicker, setDisplayColorPicker] = useState(false)\n  const color = maybeColor ?? '#000000' // Same as <input type='color' />\n\n  return (\n    <>\n      <div\n        className={styles.swatch}\n        onClick={() => setDisplayColorPicker(true)}\n      >\n        <div className={styles.color} style={{ background: color }} />\n        {color.toUpperCase()}\n      </div>\n      {displayColorPicker && (\n        <div className={styles.popover}>\n          <div\n            className={styles.cover}\n            onClick={() => setDisplayColorPicker(false)}\n          />\n          <SketchPicker\n            disabled={disabled}\n            disableAlpha\n            color={color}\n            onChangeComplete={(color) => onChange(color.hex)}\n          />\n        </div>\n      )}\n    </>\n  )\n}\n","import React from 'react'\nimport { Col } from 'react-bootstrap'\nimport InilineColorPicker from '../../InlineColorPicker'\nimport ChartOptionSelect from './ChartOptionSelect'\n\nconst ChartOptionColor = ({\n  value,\n  error,\n  onChange,\n  default: defaultValue,\n  label,\n  isEnabled,\n  ...props\n}) => {\n  if (props.options) {\n    return (\n      <ChartOptionSelect\n        value={value}\n        error={error}\n        onChange={onChange}\n        default={defaultValue}\n        label={label}\n        {...props}\n      />\n    )\n  }\n\n  return (\n    <label className={props.className+\" row\"}>\n      <Col xs={6} className=\"d-flex align-items-center\">{label}</Col>\n      <Col xs={6}>\n        <InilineColorPicker disabled={!isEnabled} color={value} onChange={onChange} />\n      </Col>\n      {error && (\n        <small>\n          <i>{error}</i>\n        </small>\n      )}\n    </label>\n  )\n}\n\nexport default React.memo(ChartOptionColor)\n","import React from 'react'\nimport styles from '../ChartOptions.module.scss'\nimport { COLOR_SCHEMES_LABELS } from '../../../constants'\nimport get from 'lodash/get'\n\nconst ColorSchemePreview = ({ label, scale, numSamples=150 }) => {\n  let samples\n  if (scale.ticks) {\n    samples = scale.ticks(numSamples)\n  } else {\n    if(scale.domain){\n      samples = scale.domain()\n    } else {\n      samples = []\n    }\n    \n  }\n  return (\n    <div className={styles['scheme-preview']}>\n      {label && <div style={{marginBottom:2}}>{get(COLOR_SCHEMES_LABELS, label, label)}</div>}\n      <div className=\"d-flex\">\n        {samples.map((sample) => (\n          <div\n            key={'sample-'+sample}\n            style={{ flex: 1, height: 10, background: scale(sample) }}\n          ></div>\n        ))}\n      </div>\n    </div>\n  )\n}\n\nexport default React.memo(ColorSchemePreview)","import React from 'react'\nimport { Dropdown } from 'react-bootstrap'\nimport ColorSchemePreview from './ColorSchemePreview'\nimport {\n  colorPresets,\n  getColorDomain,\n  getPresetScale\n} from '@rawgraphs/rawgraphs-core'\nimport styles from '../ChartOptions.module.scss'\n\nconst ColorSchemesDropDown = ({\n    interpolators,\n    interpolator,\n    setInterpolator,\n    // To display color-scale preview\n    colorDataset,\n    colorDataType,\n    scaleType,\n    currentFinalScale\n}) => {\n\n  return (\n    <Dropdown className=\"d-inline-block raw-dropdown w-100\">\n      <Dropdown.Toggle variant=\"white\" className=\"w-100\" style={{paddingRight:24}} disabled={!colorDataType}>\n        { currentFinalScale && <ColorSchemePreview\n          scale={currentFinalScale}\n        />}\n      </Dropdown.Toggle>\n      {colorDataType && <Dropdown.Menu className=\"w-100\">\n      {interpolators.map(\n        (intrplr) => {\n          return (\n            <Dropdown.Item key={intrplr} onClick={()=>setInterpolator(intrplr)} className={styles[\"color-scheme-dropdown-item\"]}>\n              { colorDataset[0] && colorPresets[scaleType][interpolator] && \n                <ColorSchemePreview\n                  scale={\n                    getPresetScale(scaleType, getColorDomain(colorDataset, colorDataType, scaleType), intrplr)\n                  }\n                  label={intrplr}\n                />\n              }\n            </Dropdown.Item>\n          )\n        }\n      )}\n      </Dropdown.Menu>}\n    </Dropdown>\n  )\n}\n\nexport default React.memo(ColorSchemesDropDown)","import React from 'react'\nimport { Tooltip, OverlayTrigger } from 'react-bootstrap'\nimport {\n  BsArrowCounterclockwise,\n  BsArrowLeftRight,\n  BsLockFill,\n  BsUnlockFill,\n} from 'react-icons/bs'\n\nfunction ResetBtn({ resetScale }) {\n  return (\n    <OverlayTrigger\n      key=\"bottom\"\n      placement=\"bottom\"\n      overlay={<Tooltip id={`tooltip-top`}>Reset domain</Tooltip>}\n    >\n      <span type=\"button\" className=\"btn\" onClick={resetScale}>\n        <BsArrowCounterclockwise width=\"16\" height=\"16\" />\n      </span>\n    </OverlayTrigger>\n  )\n}\n\nfunction InvertBtn({ invertScale }) {\n  return (\n    <OverlayTrigger\n      key=\"bottom\"\n      placement=\"bottom\"\n      overlay={<Tooltip id={`tooltip-top`}>Invert</Tooltip>}\n    >\n      <span type=\"button\" className=\"btn\" onClick={invertScale}>\n        <BsArrowLeftRight width=\"16\" height=\"16\" />\n      </span>\n    </OverlayTrigger>\n  )\n}\n\nfunction LockBtn({ handleChangeLocked, locked }) {\n  return (\n    <OverlayTrigger\n      key=\"bottom\"\n      placement=\"bottom\"\n      overlay={<Tooltip id={`tooltip-top`}>{locked ? 'Unlock' : 'Lock'} scale</Tooltip>}\n    >\n      <span\n        type=\"button\"\n        className={`btn ${locked ? 'Xbtn-primary' : ''}`}\n        onClick={() => handleChangeLocked(!locked)}\n      >\n        {locked ? <BsUnlockFill width=\"16\" height=\"16\" /> : <BsLockFill width=\"16\" height=\"16\" />}\n      </span>\n    </OverlayTrigger>\n  )\n}\n\nexport { ResetBtn, InvertBtn, LockBtn }\n","import { useRef, useEffect } from 'react'\nexport default function usePrevious(value) {\n  // The ref object is a generic container whose current property is mutable ...\n  // ... and can hold any value, similar to an instance property on a class\n  const ref = useRef()\n\n  // Store current value in ref\n  useEffect(() => {\n    ref.current = value\n  }, [value]) // Only re-run if value changes\n\n  // Return previous value (happens before update in useEffect above)\n  return ref.current\n}\n","import React, { useState, useMemo, useEffect, useCallback, useRef } from 'react'\nimport InilineColorPicker from '../../InlineColorPicker'\nimport ColorSchemesDropDown from './ColorSchemesDropDown'\nimport { Row, Col, Dropdown } from 'react-bootstrap'\nimport { ResetBtn, InvertBtn, LockBtn } from './ColorScaleUtils'\nimport { SCALES_LABELS } from '../../../constants'\nimport get from 'lodash/get'\nimport keyBy from 'lodash/keyBy'\nimport {\n  getInitialScaleValues,\n  getColorScale,\n  getDefaultColorScale,\n  getColorDomain,\n  colorPresets,\n  getAvailableScaleTypes,\n  getValueType,\n} from '@rawgraphs/rawgraphs-core'\nimport styles from '../ChartOptions.module.scss'\nimport usePrevious from '../../../hooks/usePrevious'\n\nfunction getDatePickerValue(userValue) {\n  if (userValue.userDomain === 0) {\n    return 0\n  }\n  if (!userValue.userDomain) {\n    return ''\n  }\n\n  if (getValueType(userValue.userDomain) === 'date') {\n    return userValue.userDomain.toISOString().substring(0, 10)\n  }\n\n  return userValue.userDomain\n}\n\nconst ChartOptionColorScale = ({\n  value,\n  error,\n  onChange,\n  defaultValue,\n  label,\n  dimension,\n  dataset,\n  mapping,\n  dataTypes,\n  chart,\n  mappedData,\n  mappingValue,\n  colorDataset,\n  colorDataType,\n  hasAnyMapping,\n  ...props\n}) => {\n\n  // here we leverage injection of the __loaded prop in the color scale, see App.js\n  const initialValue = useRef(!!value.__loaded)\n  \n  const [scaleType, setScaleType] = useState(get(value, 'scaleType'))\n\n  const defaultColor = useMemo(() => {\n    const colorFromDefault = get(defaultValue, 'defaultColor', '#cccccc')\n    return get(value, 'defaultColor', colorFromDefault)\n  }, [defaultValue, value])\n\n  const [locked, setLocked] = useState(get(value, 'locked'))\n\n  const availableScaleTypes = useMemo(() => {\n    const nextTypes = getAvailableScaleTypes(colorDataType, colorDataset)\n    return nextTypes\n  }, [colorDataType, colorDataset])\n\n  const [interpolators, setInterpolators] = useState(\n    get(value, 'scaleType')\n      ? Object.keys(colorPresets[get(value, 'scaleType')])\n      : []\n  )\n\n  const [interpolator, setInterpolator] = useState(get(value, 'interpolator'))\n  const [userValues, setUserValues] = useState(\n    get(value, 'userScaleValues', []).map((userValue) => ({\n      ...userValue,\n      userDomain: userValue.domain,\n      userRange: userValue.range,\n    }))\n  )\n\n  const getCurrentFinalScale = useCallback(\n    (interpolator, scaleType, userValuesForFinalScale, defaultColor) => {\n      if (\n        !scaleType ||\n        !interpolator ||\n        !colorPresets[scaleType][interpolator] ||\n        !userValuesForFinalScale ||\n        !userValuesForFinalScale.length\n      ) {\n        return\n      }\n\n      const domains = userValuesForFinalScale\n        .map((x) => x.domain)\n        .filter((x) => x !== undefined)\n      if (!domains.length) {\n        return\n      }\n\n      const previewScale = getColorScale(\n        colorDataset, //the array of values of the dataset mapped on the color dimension\n        colorDataType,\n        scaleType, //\n        interpolator,\n        userValuesForFinalScale,\n      )\n\n      return previewScale\n    },\n    [colorDataType, colorDataset]\n  )\n\n  const getDefaultUserValues = useCallback(\n    (interpolator, scaleType) => {\n      if (!colorDataset.length || !colorDataType || !scaleType) {\n        return []\n      }\n      if (!colorPresets[scaleType][interpolator]) {\n        return []\n      }\n\n      const domain = getColorDomain(colorDataset, colorDataType, scaleType)\n\n      return getInitialScaleValues(domain, scaleType, interpolator).map(\n        (userValue) => ({\n          ...userValue,\n          userRange: userValue.range,\n          userDomain: userValue.domain,\n        })\n      )\n    },\n    [colorDataType, colorDataset]\n  )\n\n  const getUserValuesForFinalScale = useCallback(\n    (values) => {\n      return values.map((value) => ({\n        range: value.userRange,\n        domain:\n          colorDataType === 'date'\n            ? value.userDomain?.toString()\n            : value.userDomain,\n        // domain: value.userDomain,\n      }))\n    },\n    [colorDataType]\n  )\n\n  const currentFinalScale = useMemo(() => {\n\n    if (scaleType && interpolator) {\n      const currentUserValues =\n        userValues && userValues.length\n          ? userValues\n          : getDefaultUserValues(interpolator, scaleType)\n      const valuesForFinalScale = getUserValuesForFinalScale(currentUserValues)\n      return getCurrentFinalScale(interpolator, scaleType, valuesForFinalScale)\n    }\n    return getDefaultColorScale()\n  }, [\n    getCurrentFinalScale,\n    getDefaultUserValues,\n    getUserValuesForFinalScale,\n    interpolator,\n    scaleType,\n    userValues,\n  ])\n\n  const handleChangeValues = useCallback(\n    (nextUserValues) => {\n      let valuesForFinalScale = getUserValuesForFinalScale(nextUserValues)\n\n      //notify ui\n      const outScaleParams = {\n        scaleType,\n        interpolator: interpolator,\n        userScaleValues: valuesForFinalScale,\n        defaultColor,\n        locked,\n      }\n      onChange(outScaleParams)\n    },\n    [getUserValuesForFinalScale, scaleType, interpolator, defaultColor, locked, onChange]\n  )\n\n  const setUserValueRange = useCallback(\n    (index, value) => {\n      const newUserValues = [...userValues]\n      newUserValues[index].userRange = value\n      setUserValues(newUserValues)\n      handleChangeValues(newUserValues)\n    },\n    [handleChangeValues, userValues]\n  )\n\n  const setUserValueDomain = useCallback(\n    (index, value) => {\n      const newUserValues = [...userValues]\n      newUserValues[index].userDomain = value\n      setUserValues(newUserValues)\n      handleChangeValues(newUserValues)\n    },\n    [handleChangeValues, userValues]\n  )\n\n\n  const handleChangeScaleType = useCallback(\n    (nextScaleType) => {\n\n      setScaleType(nextScaleType)\n\n      //update interpolators\n      const nextInterpolators = colorPresets[nextScaleType]\n        ? Object.keys(colorPresets[nextScaleType])\n        : []\n      setInterpolators(nextInterpolators)\n\n      //set first interpolator\n      const nextInterpolator = nextInterpolators[0]\n      setInterpolator(nextInterpolator)\n\n      //user values\n      const nextUserValues = getDefaultUserValues(\n        nextInterpolator,\n        nextScaleType,\n      )\n      setUserValues(nextUserValues)\n      const valuesForFinalScale = getUserValuesForFinalScale(nextUserValues)\n\n      //notify ui\n      const outScaleParams = {\n        scaleType: nextScaleType,\n        interpolator: nextInterpolator,\n        userScaleValues: valuesForFinalScale,\n        defaultColor,\n        locked,\n      }\n      onChange(outScaleParams)\n    },\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n    [getDefaultUserValues, getUserValuesForFinalScale, defaultColor, onChange, locked]\n  )\n\n  const handleSetInterpolator = useCallback(\n    (nextInterpolator, customUserValues) => {\n      setInterpolator(nextInterpolator)\n\n      //user values\n      const nextUserValues = getDefaultUserValues(nextInterpolator, scaleType)\n      setUserValues(nextUserValues)\n      let valuesForFinalScale = getUserValuesForFinalScale(nextUserValues)\n      \n      if(customUserValues){\n        const byDomain = keyBy(customUserValues, 'domain')\n        valuesForFinalScale = valuesForFinalScale.map(v => ({\n          ...v,\n          range: byDomain[v.domain.toString()] ? byDomain[v.domain.toString()].userRange : v.range\n        }))\n      }\n      //notify ui\n      const outScaleParams = {\n        scaleType,\n        interpolator: nextInterpolator,\n        userScaleValues: valuesForFinalScale,\n        defaultColor,\n        locked,\n      }\n      onChange(outScaleParams)\n    },\n    [getDefaultUserValues, getUserValuesForFinalScale, onChange, scaleType, defaultColor, locked,]\n  )\n\n  const handleChangeLocked = useCallback(\n    (nextLocked) => {\n      setLocked(nextLocked)\n      //this is needed for disabiling automatic scale reset\n      initialValue.current = true\n\n      const outScaleParams = {\n        scaleType,\n        interpolator,\n        userScaleValues: userValues,\n        defaultColor,\n        locked: nextLocked,\n      }\n      onChange(outScaleParams)\n    },\n    [scaleType, interpolator, userValues, defaultColor, onChange]\n  )\n\n\n\n  const resetScale = useCallback(() => {\n    handleSetInterpolator(interpolator, userValues)\n  }, [handleSetInterpolator, interpolator, userValues])\n\n  const invertScale = useCallback(() => {\n\n    let reversedValues = [...userValues]\n    reversedValues.reverse()\n\n    const invertedValues = userValues.map((v, i) => ({\n      ...v,\n      userRange: reversedValues[i].userRange,\n      range: reversedValues[i].range,\n\n    }))\n\n    setUserValues(invertedValues)\n    handleChangeValues(invertedValues)\n  }, [handleChangeValues, userValues])\n\n\n\n  const prevMappingValue = usePrevious(mappingValue)\n\n  useEffect(() => {\n    if (prevMappingValue && mappingValue !== prevMappingValue) {\n      initialValue.current = false\n    }\n  }, [mappingValue, prevMappingValue])\n\n  useEffect(() => {\n    if (!initialValue.current && !locked) {\n      const nextScaleType = availableScaleTypes[0]\n      handleChangeScaleType(nextScaleType)\n    }\n\n  }, [availableScaleTypes, handleChangeScaleType, locked])\n\n  // update scale on dataset update.\n  // #TODO: fixme\n\n  // const prevDataset = usePrevious(colorDataset)\n  // const prevScaleType = usePrevious(colorDataset)\n\n  // useEffect(() => {\n  //   if (!locked && colorDataset !== prevDataset && prevScaleType === scaleType) {\n  //     console.info(\"dddd resetting scope\")\n  //     const nextUserValues = getDefaultUserValues(\n  //       interpolator,\n  //       scaleType,\n  //     )\n  //     setUserValues(nextUserValues)\n  //     const valuesForFinalScale = getUserValuesForFinalScale(nextUserValues)\n  //     //notify ui\n  //     const outScaleParams = {\n  //       scaleType,\n  //       interpolator,\n  //       userScaleValues: valuesForFinalScale,\n  //       defaultColor,\n  //       locked,\n  //     }\n  //     onChange(outScaleParams)\n  //   }\n  // }, [colorDataset, defaultColor, getDefaultUserValues, getUserValuesForFinalScale, interpolator, locked, onChange, prevDataset, prevScaleType, scaleType])\n\n\n  return hasAnyMapping ? (\n    <>\n      <Row className={props.className} style={{marginTop:'8px', marginBottom:'8px'}}>\n        <Col xs={5} className=\"d-flex align-items-center nowrap\">\n          Color scale\n        </Col>\n        <Col xs={7}>\n          <Dropdown className=\"d-inline-block raw-dropdown w-100\">\n            <Dropdown.Toggle variant=\"white\" className=\"w-100\" style={{paddingRight:24}} disabled={!colorDataType}>\n              {get(SCALES_LABELS, scaleType, scaleType)}\n            </Dropdown.Toggle>\n            <Dropdown.Menu className=\"w-100\">\n            {availableScaleTypes.map(\n              (s) => {\n                return (\n                  <Dropdown.Item key={s} onClick={()=>handleChangeScaleType(s)}>\n                    {get(SCALES_LABELS, s, s)}\n                  </Dropdown.Item>\n                )\n              }\n            )}\n            </Dropdown.Menu>\n          </Dropdown>\n        </Col>\n      </Row>\n\n      {/* Color scheme */}\n      <Row className={[props.className].join(' ')} style={{marginTop:'8px', marginBottom:'8px'}}>\n        <Col xs={5} className=\"d-flex align-items-center nowrap\">\n          Color scheme\n        </Col>\n        <Col xs={7}>\n          <ColorSchemesDropDown\n            interpolators={interpolators}\n            interpolator={interpolator}\n            setInterpolator={handleSetInterpolator}\n            // To display color-scale preview\n            colorDataset={colorDataset}\n            colorDataType={colorDataType}\n            scaleType={scaleType}\n            currentFinalScale={currentFinalScale}\n          />\n        </Col>\n      </Row>\n\n      {/* Scale color swatches */}\n      {colorDataType && userValues && (\n        <div className={styles['color-swatches-list']}>\n          {userValues.map((userValue, i) => (\n            <Row\n              key={i}\n              className={[\n                styles['chart-option'],\n                styles['color-swatch'],\n                scaleType !== 'ordinal'\n                  ? styles['not-ordinal']\n                  : styles['ordinal'],\n              ].join(' ')}\n            >\n              <Col xs={12}>\n                <div className={styles['color-scale-item']}>\n                  {scaleType === 'ordinal' &&\n                    get(userValue, 'domain') !== undefined && (\n                      <span\n                        className=\"nowrap text-truncate pr-2\"\n                        title={userValue.domain && userValue.domain.toString()}\n                      >\n                        {userValue.domain === ''\n                          ? '[empty string]'\n                          : userValue.domain.toString()}\n                      </span>\n                    )}\n                  {scaleType !== 'ordinal' && (\n                    <>\n                      <span className=\"nowrap\">\n                        {i === 0\n                          ? 'Start'\n                          : i === userValues.length - 1\n                            ? 'End'\n                            : 'Middle'}\n                      </span>\n                      <input\n                        disabled={locked}\n                        type={getValueType(userValue.userDomain)}\n                        className=\"form-control text-field\"\n                        value={getDatePickerValue(userValue)}\n                        onChange={(e) => {\n                          if (colorDataType === 'date') {\n                            setUserValueDomain(i, new Date(e.target.value))\n                          } else {\n                            setUserValueDomain(i, e.target.value)\n                          }\n                        }}\n                      ></input>\n                    </>\n                  )}\n                  <InilineColorPicker\n                    color={userValue.userRange}\n                    onChange={(color) => {\n                      setUserValueRange(i, color)\n                    }}\n                  />\n                </div>\n              </Col>\n            </Row>\n          ))}\n          <Row>\n            <Col className=\"d-flex justify-content-end\">\n              <ResetBtn resetScale={resetScale} />\n              <InvertBtn invertScale={invertScale} />\n              {\n                scaleType !== 'ordinal' && (\n                  <LockBtn locked={locked} handleChangeLocked={handleChangeLocked} />\n                )\n              }\n\n            </Col>\n          </Row>\n\n        </div>\n      )}\n\n    </>\n  ) : null\n}\n\nexport default ChartOptionColorScale\n","import React, { useState, useMemo, useEffect, useCallback } from 'react'\nimport InilineColorPicker from '../../InlineColorPicker'\nimport { Col } from 'react-bootstrap'\nimport get from 'lodash/get'\nimport style from '../ChartOptions.module.scss'\n\nconst ChartOptionColorScaleDefault = ({\n  value,\n  error,\n  onChange,\n  default: defaultValue,\n  label,\n  dimension,\n  dataset,\n  mapping,\n  dataTypes,\n  chart,\n  mappedData,\n  mappingValue,\n  colorDataType,\n  colorDataset,\n  ...props\n}) => {\n  const colorFromValue = useMemo(() => {\n    const colorFromDefault = get(defaultValue, 'defaultColor', '#cccccc')\n    return get(value, 'defaultColor', colorFromDefault)\n  }, [defaultValue, value])\n\n  const [defaultColor, setDefaultColor] = useState(colorFromValue)\n\n  const handleChangeDefaultColor = useCallback(\n    (nextDefaultColor) => {\n      setDefaultColor(nextDefaultColor)\n      const outScaleParams = {\n        ...value,\n        defaultColor: nextDefaultColor,\n      }\n      onChange(outScaleParams)\n    },\n    [value, onChange]\n  )\n\n  useEffect(() => {\n    if (defaultValue && defaultValue.defaultColor !== defaultColor) {\n      handleChangeDefaultColor(defaultValue.defaultColor)\n    }\n  }, [defaultColor, defaultValue, handleChangeDefaultColor])\n\n  return (\n    <>\n      <label className={[style['chart-option'], 'row'].join(' ')}>\n        <Col xs={6} className=\"d-flex align-items-center\">\n          Default\n        </Col>\n        <Col xs={6}>\n          <InilineColorPicker\n            color={defaultColor}\n            onChange={handleChangeDefaultColor}\n          />\n        </Col>\n      </label>\n    </>\n  )\n}\n\nexport default ChartOptionColorScaleDefault\n","import React, { useMemo } from 'react'\nimport ChartOptionColorScale from './ChartOptionColorScale'\nimport ChartOptionColorScaleDefault from './ChartOptionColorScaleDefault'\n\nconst ChartOptionColorScaleWrapper = ({\n  value,\n  onChange,\n  default: defaultValue,\n  mappingValue,\n  colorDataType,\n  colorDataset,\n\n}) => {\n\n  const hasAnyMapping = useMemo(() => {\n    return colorDataset && colorDataset.length > 0\n  // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [colorDataset])\n\n  return <>\n    {!hasAnyMapping && <ChartOptionColorScaleDefault onChange={onChange} defaultValue={defaultValue} value={value} />}\n    {hasAnyMapping &&  <ChartOptionColorScale hasAnyMapping={hasAnyMapping} mappingValue={mappingValue} defaultValue={defaultValue} value={value} colorDataType={colorDataType} colorDataset={colorDataset} onChange={onChange} />}\n  </>\n}\n\nexport default ChartOptionColorScaleWrapper\n","import React from 'react'\nimport { Row, Col, Form } from 'react-bootstrap'\n\nconst ChartOptionBoolean = ({ optionId, label, value, error, onChange, className, isEnabled }) => {\n  return (\n    <Row className={className}>\n      <Col xs={6} className=\"d-flex align-items-center nowrap\">{label}</Col>\n      <Form className=\"col-6 d-flex align-items-center\">\n        <Form.Check\n          type=\"switch\"\n          checked={!!value}\n          disabled={!isEnabled}\n          onChange={(e) => {\n            onChange(e.target.checked)\n          }}\n          id={optionId}\n          label={value ? 'Yes' : 'No'}\n        />\n      </Form>\n      {error && (\n        <div className=\"col-12\">\n          <small>\n            <i>{error}</i>\n          </small>\n        </div>\n      )}\n    </Row>\n  )\n}\n\nexport default React.memo(ChartOptionBoolean)\n","import React, { useCallback, useState, useMemo } from 'react'\nimport { Row, Col } from 'react-bootstrap'\nimport {\n  getOptionsConfig,\n  getContainerOptions,\n  getDefaultOptionsValues,\n  getEnabledOptions,\n  getTypeName,\n} from '@rawgraphs/rawgraphs-core'\nimport ChartOptionNumber from './ChartOptionTypes/ChartOptionNumber'\nimport ChartOptionText from './ChartOptionTypes/ChartOptionText'\nimport ChartOptionColor from './ChartOptionTypes/ChartOptionColor'\nimport ChartOptionColorScaleWrapper from './ChartOptionTypes/ChartOptionColorScaleWrapper'\nimport ChartOptionBoolean from './ChartOptionTypes/ChartOptionBoolean'\nimport get from 'lodash/get'\nimport map from 'lodash/map'\nimport styles from './ChartOptions.module.scss'\nimport omit from 'lodash/omit'\n\nconst CHART_OPTION_COMPONENTS = {\n  number: ChartOptionNumber,\n  text: ChartOptionText,\n  color: ChartOptionColor,\n  colorScale: ChartOptionColorScaleWrapper,\n  boolean: ChartOptionBoolean,\n}\n\nfunction getPartialMapping(mapping, dimension, repeatIndex) {\n  const nv = get(mapping[dimension], `value[${repeatIndex}]`)\n  return {\n    ...mapping,\n    [dimension]: {\n      ...mapping[dimension],\n      value: [nv],\n    },\n  }\n}\n\nfunction getPartialMappedData(mappedData, dimension, repeatIndex) {\n  return Array.isArray(mappedData)\n    ? mappedData.map((datum) => {\n        const value = get(datum[dimension], `[${repeatIndex}]`)\n        return {\n          ...datum,\n          [dimension]: value,\n        }\n      })\n    : mappedData\n}\n\nfunction getDefaultForRepeat(def, index) {\n  if (Array.isArray(def.repeatDefault)) {\n    return get(def.repeatDefault, `[${index}]`, def.default)\n  }\n  return def.default\n}\n\nfunction WrapControlComponent({\n  type,\n  optionId,\n  setVisualOptions,\n  label,\n  repeatIndex,\n  ...props\n}) {\n  const Component = CHART_OPTION_COMPONENTS[type]\n\n  const remainingOptions = useMemo(() => {\n    if (type !== 'colorScale') {\n      return null\n    }\n\n    return Object.keys(omit(props.visualOptions, optionId))\n      .map((k) => JSON.stringify(get(props.visualOptions, k, '')))\n      .join('-')\n  }, [type, props.visualOptions, optionId])\n\n  const domainFromChart = useMemo(() => {\n    if (type !== 'colorScale') {\n      return null\n    }\n    if (props.domain && props.chart[props.domain]) {\n      //as sometimes the current chart is not in synch with current options (chart is set before options, we just handle an exception)\n      //everything should be ok on the next render.\n      try {\n        const domain = props.chart[props.domain](\n          props.mappedData,\n          props.mapping,\n          props.visualOptions\n        )\n        return domain\n      } catch (e) {\n        return null\n      }\n    } else {\n      return null\n    }\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [\n    type,\n    props.chart,\n    props.domain,\n    props.mappedData,\n    props.mapping,\n    remainingOptions,\n  ])\n\n  const mappingValue = useMemo(() => {\n    if (type !== 'colorScale') {\n      return null\n    }\n    return domainFromChart\n      ? '__custom__'\n      : get(props.mapping, `[${props.dimension}].value`)\n  }, [domainFromChart, props.dimension, props.mapping, type])\n\n  const colorDataType = useMemo(() => {\n    if (type !== 'colorScale') {\n      return null\n    }\n    if (domainFromChart) {\n      return domainFromChart.type\n    }\n    return props.dataTypes[mappingValue]\n      ? getTypeName(props.dataTypes[mappingValue])\n      : 'string'\n  }, [type, props.dataTypes, domainFromChart, mappingValue])\n\n  const colorDataset = useMemo(() => {\n    if (type !== 'colorScale') {\n      return null\n    }\n    if (domainFromChart) {\n      return domainFromChart.domain\n    }\n\n    if (props.mappedData) {\n      return props.mappedData\n        .map((d) => get(d, props.dimension))\n        .filter(\n          (item) => item !== undefined && !(Array.isArray(item) && !item.length)\n        )\n    } else {\n      return []\n    }\n  }, [type, props.dimension, domainFromChart, props.mappedData])\n\n  const handleControlChange = useCallback(\n    (nextValue) => {\n      setVisualOptions((visualOptions) => {\n        let newValue = nextValue\n        if (repeatIndex !== undefined) {\n          newValue = visualOptions[optionId] || []\n          newValue[repeatIndex] = nextValue\n        }\n        return {\n          ...visualOptions,\n          [optionId]: newValue,\n        }\n      })\n    },\n    [optionId, repeatIndex, setVisualOptions]\n  )\n\n  return (\n    <Component\n      type={type}\n      domainFromChart={domainFromChart}\n      mappingValue={mappingValue}\n      colorDataType={colorDataType}\n      colorDataset={colorDataset}\n      optionId={optionId}\n      label={\n        repeatIndex !== undefined ? (\n          <React.Fragment>\n            {label} ({repeatIndex + 1})\n          </React.Fragment>\n        ) : (\n          label\n        )\n      }\n      {...omit(props, [\n        'mapping',\n        'visualOptions',\n        'chart',\n        'dataset',\n        'dataTypes',\n        'mappedData',\n      ])}\n      onChange={handleControlChange}\n    />\n  )\n}\n\nconst ChartOptions = ({\n  chart,\n  dataset,\n  mapping,\n  dataTypes,\n  visualOptions,\n  setVisualOptions,\n  error,\n  mappedData,\n}) => {\n  const optionsConfig = useMemo(() => {\n    return getOptionsConfig(chart?.visualOptions)\n  }, [chart])\n\n  const [collapseStatus, setCollapseStatus] = useState(() => {\n    const groups = {}\n    for (const option in optionsConfig) {\n      const group = optionsConfig[option].group\n      if (!groups.hasOwnProperty(group)) {\n        groups[group] = true\n      }\n    }\n    return groups\n  })\n\n  const enabledOptions = useMemo(() => {\n    return getEnabledOptions(optionsConfig, visualOptions, mapping)\n  }, [optionsConfig, visualOptions, mapping])\n\n  // const enabledGroupsByName = useMemo(() => {\n  //   const enabledGroupsNames = Object.keys(optionsConfig).map(optionName => enabledOptions[optionName] ? optionsConfig[optionName].group : null).filter(x => !!x)\n  //   return mapValues(keyBy(enabledGroupsNames), x => true)\n  // }, [enabledOptions, optionsConfig])\n  // // #TODO we can use enabledGroupsByName to disable the group\n\n  const optionsDefinitionsByGroup = useMemo(() => {\n    // update \"collapseStatus\" state\n    // add/remove options groups when selected charts changes\n    const groups = {}\n    for (const option in optionsConfig) {\n      const group = optionsConfig[option].group\n      if (!groups.hasOwnProperty(group)) {\n        groups[group] = group === 'artboard' ? false : true\n      }\n    }\n    setCollapseStatus(groups)\n    return Object.keys(optionsConfig).reduce((acc, optionId) => {\n      const option = optionsConfig[optionId]\n      const group = option?.group || ''\n      if (!acc[group]) {\n        acc[group] = {}\n      }\n      acc[group][optionId] = option\n      return acc\n    }, {})\n  }, [optionsConfig])\n\n  const containerOptions = useMemo(() => {\n    const defaultOptionsValues = getDefaultOptionsValues(optionsConfig, mapping)\n    const opts = {\n      ...defaultOptionsValues,\n      ...visualOptions,\n    }\n    return getContainerOptions(optionsConfig, opts)\n  }, [mapping, optionsConfig, visualOptions])\n\n  return (\n    <div className={[styles['chart-options'], 'col-4', 'col-xl-3'].join(' ')}>\n      {map(optionsDefinitionsByGroup, (options, groupName) => {\n        return (\n          <div\n            key={groupName}\n            groupname={groupName}\n            className={[\n              styles['options-group'],\n              collapseStatus[groupName] ? styles['collapsed'] : '',\n            ].join(' ')}\n          >\n            <Row className=\"sticky-top\">\n              <Col\n                className={`d-flex justify-content-between align-items-center ${styles['group-header']}`}\n              >\n                <h5 className=\"text-uppercase m-0\">{groupName}</h5>\n                <span\n                  className={[styles['collapse-button'], 'cursor-pointer'].join(\n                    ' '\n                  )}\n                  onClick={() =>\n                    setCollapseStatus({\n                      ...collapseStatus,\n                      [groupName]: !collapseStatus[groupName],\n                    })\n                  }\n                ></span>\n              </Col>\n            </Row>\n            {map(options, (def, optionId) => {\n              // repeated options: notice that value is set to a default if undefined\n              // this is caused by changes in shapes of the mapping object\n              // (when a new value is dragged to the dimension that repeats the option)\n              // the same approach is applied in option validation by the raw core lib\n              return def.repeatFor ? (\n                get(\n                  mapping,\n                  `[${def.repeatFor}].value`,\n                  []\n                ).map((v, repeatIndex) => (\n                  <WrapControlComponent\n                    className={styles['chart-option']}\n                    key={optionId + repeatIndex}\n                    repeatIndex={repeatIndex}\n                    {...def}\n                    optionId={optionId}\n                    error={error?.errors?.[optionId + repeatIndex]}\n                    value={\n                      visualOptions?.[optionId]?.[repeatIndex] ??\n                      getDefaultForRepeat(def, repeatIndex)\n                    }\n                    mapping={\n                      def.type === 'colorScale'\n                        ? getPartialMapping(mapping, def.repeatFor, repeatIndex)\n                        : undefined\n                    }\n                    chart={def.type === 'colorScale' ? chart : undefined}\n                    dataset={def.type === 'colorScale' ? dataset : undefined}\n                    dataTypes={\n                      def.type === 'colorScale' ? dataTypes : undefined\n                    }\n                    visualOptions={\n                      def.type === 'colorScale' ? visualOptions : undefined\n                    }\n                    mappedData={getPartialMappedData(\n                      mappedData,\n                      def.repeatFor,\n                      repeatIndex\n                    )}\n                    setVisualOptions={setVisualOptions}\n                    isEnabled={enabledOptions[optionId]}\n                  />\n                ))\n              ) : (\n                <WrapControlComponent\n                  className={styles['chart-option']}\n                  key={optionId}\n                  {...def}\n                  optionId={optionId}\n                  error={error?.errors?.[optionId]}\n                  value={visualOptions?.[optionId]}\n                  mapping={def.type === 'colorScale' ? mapping : undefined}\n                  chart={def.type === 'colorScale' ? chart : undefined}\n                  dataset={def.type === 'colorScale' ? dataset : undefined}\n                  dataTypes={def.type === 'colorScale' ? dataTypes : undefined}\n                  visualOptions={\n                    def.type === 'colorScale' ? visualOptions : undefined\n                  }\n                  mappedData={mappedData}\n                  setVisualOptions={setVisualOptions}\n                  isEnabled={enabledOptions[optionId]}\n                />\n              )\n            })}\n            {groupName === 'artboard' && visualOptions.showLegend && (\n              <p className=\"small\">\n                The final output will be {containerOptions?.width}px *{' '}\n                {containerOptions?.height}px including the legend.\n              </p>\n            )}\n          </div>\n        )\n      })}\n    </div>\n  )\n}\n\nexport default ChartOptions\n","import React, { useRef, useEffect } from 'react'\nimport { chart as rawChart } from '@rawgraphs/rawgraphs-core'\nimport useDebounce from '../../hooks/useDebounce'\nimport WarningMessage from '../WarningMessage'\n\nconst ChartPreview = ({\n  chart,\n  dataset: data,\n  dataTypes,\n  mapping,\n  visualOptions,\n  error,\n  setError,\n  setRawViz,\n  mappedData,\n}) => {\n  const domRef = useRef(null)\n\n  const vizOptionsDebounced = useDebounce(visualOptions, 200)\n  \n  useEffect(() => {\n    setError(null)\n\n    // control required variables\n    // need to create this array because the prop mapping does not return to {} when data is inserted and removed\n    const currentlyMapped = []\n    for (let variable in mapping) {\n      if (mapping[variable].ids && mapping[variable].ids.length > 0) {\n        currentlyMapped.push(variable)\n      }\n    }\n\n    let requiredVariables = chart.dimensions.filter(\n      (d) => d.required && currentlyMapped.indexOf(d.id) === -1\n    )\n\n    if (requiredVariables.length > 0) {\n      let errorMessage = (\n        <span>\n          Required chart variables: you need to map{' '}\n          {requiredVariables\n            .map((d, i) => <span key={i} className=\"font-weight-bold\">{d.name}</span>)\n            .reduce((prev, curr) => [prev, ' and ', curr])}\n        </span>\n      )\n      setError({ variant: 'secondary', message: errorMessage })\n      setRawViz(null)\n      while (domRef.current.firstChild) {\n        domRef.current.removeChild(domRef.current.firstChild)\n      }\n      return\n    }\n\n    // control multiple required variables\n    const multivaluesVariables = chart.dimensions.filter(\n      (d) =>\n        d.multiple &&\n        d.required &&\n        d.minValues &&\n        mapping[d.id].ids.length < d.minValues\n    )\n    if (multivaluesVariables.length > 0) {\n      let errorMessage = (\n        <span>\n          Please map{' '}\n          {multivaluesVariables\n            .map((d) => (\n              <>\n                at least <span className=\"font-weight-bold\">{d.minValues}</span>{' '}\n                dimensions on <span className=\"font-weight-bold\">{d.name}</span>\n              </>\n            ))\n            .reduce((prev, curr) => [prev, ' and ', curr])}\n          .\n        </span>\n      )\n      setError({ variant: 'secondary', message: errorMessage })\n      setRawViz(null)\n      while (domRef.current.firstChild) {\n        domRef.current.removeChild(domRef.current.firstChild)\n      }\n      return\n    }\n\n    // control data-types mismatches\n    for (let variable in mapping) {\n      if (\n        mapping[variable].ids &&\n        mapping[variable].ids.length > 0 &&\n        !mapping[variable].isValid\n      ) {\n        const variableObj = chart.dimensions.find((d) => d.id === variable)\n        const errorMessage = `Data-type mismatch: you can’t map ${mapping[variable].mappedType}s on ${variableObj.name}.`\n        setError({ variant: 'danger', message: errorMessage })\n        setRawViz(null)\n        while (domRef.current.firstChild) {\n          domRef.current.removeChild(domRef.current.firstChild)\n        }\n        return\n      }\n    }\n\n    if (!mappedData) {\n      // console.info('Clearing viz')\n      setRawViz(null)\n      while (domRef.current.firstChild) {\n        domRef.current.removeChild(domRef.current.firstChild)\n      }\n      return\n    }\n    // console.info('Updating viz')\n    try {\n      const viz = rawChart(chart, {\n        data,\n        mapping: mapping,\n        dataTypes,\n        visualOptions: vizOptionsDebounced,\n      })\n      try {\n        const rawViz = viz.renderToDOM(domRef.current, mappedData)\n        setRawViz(rawViz)\n        setError(null)\n      } catch (e) {\n        console.log(\"chart error\", e)\n        setError({ variant: 'danger', message: 'Chart error. ' + e.message })\n        setRawViz(null)\n      }\n    } catch (e) {\n      while (domRef.current.firstChild) {\n        domRef.current.removeChild(domRef.current.firstChild)\n      }\n      console.log({ e })\n      setError({ variant: 'danger', message: 'Chart error. ' + e.message })\n      setRawViz(null)\n    }\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [setError, vizOptionsDebounced, setRawViz, mappedData, chart, mapping])\n\n  return (\n    <div className={'col-8 col-xl-9'}>\n      <div\n        className={['overflow-auto', 'position-sticky'].join(' ')}\n        style={{ top: 'calc(15px + var(--header-height))' }}\n      >\n        {error && (\n          <WarningMessage variant={error.variant} message={error.message} />\n        )}\n        <div ref={domRef}>{/* Don't put content in this <div /> */}</div>\n      </div>\n    </div>\n  )\n}\n\nexport default React.memo(ChartPreview)\n","import { useEffect, useState } from 'react'\n\nexport default function useDebounce(value, delay) {\n  // State and setters for debounced value\n  const [debouncedValue, setDebouncedValue] = useState(value)\n\n  useEffect(\n    () => {\n      // Update debounced value after delay\n      const handler = setTimeout(() => {\n        setDebouncedValue(value)\n      }, delay)\n\n      // Cancel the timeout if value changes (also on delay change or unmount)\n      // This is how we prevent debounced value from updating if value is changed ...\n      // .. within the delay period. Timeout gets cleared and restarted.\n      return () => {\n        clearTimeout(handler)\n      }\n    },\n    [value, delay] // Only re-call effect if value or delay changes\n  )\n\n  return debouncedValue\n}\n","import React, { useState, useEffect } from 'react'\nimport { Row } from 'react-bootstrap'\nimport ChartOptions from '../ChartOptions'\nimport ChartPreview from '../ChartPreview'\nimport { chart as rawChart } from '@rawgraphs/rawgraphs-core'\nimport { mapDataInWorker } from '../../worker'\nimport { WEBWORKER_ACTIVE } from '../../constants'\n\nconst ChartPreviewWithOptions = ({\n  chart,\n  dataset,\n  dataTypes,\n  mapping,\n  visualOptions,\n  setVisualOptions,\n  setRawViz,\n  setMappingLoading,\n}) => {\n  const [error, setError] = useState({variant: \"secondary\", message: \"Required chart variables\"})\n  const [mappedData, setMappedData] = useState(null)\n\n  useEffect(() => {\n    // console.info('Updating mapped dataset')\n    try {\n      setMappingLoading(true)\n\n      if (WEBWORKER_ACTIVE) {\n        mapDataInWorker(chart.metadata.name, {\n          data: dataset,\n          mapping: mapping,\n          dataTypes,\n        })\n          .then((mappedData) => {\n            setMappingLoading(false)\n            setMappedData(mappedData)\n          })\n          .catch((err) => {\n            console.error(err)\n            setMappingLoading(false)\n            setMappedData(null)\n          })\n      } else {\n        const viz = rawChart(chart, {\n          data: dataset,\n          mapping: mapping,\n          dataTypes,\n        })\n        const vizData = viz._getVizData()\n        setMappingLoading(false)\n        setMappedData(vizData)\n      }\n    } catch (e) {\n      console.error(e)\n      setMappingLoading(false)\n      setMappedData(null)\n    }\n  }, [\n    chart,\n    mapping,\n    dataTypes,\n    setError,\n    setRawViz,\n    setMappingLoading,\n    dataset,\n  ])\n\n  return (\n    <Row>\n        <ChartOptions\n          chart={chart}\n          dataset={dataset}\n          mapping={mapping}\n          dataTypes={dataTypes}\n          visualOptions={visualOptions}\n          setVisualOptions={setVisualOptions}\n          error={error}\n          mappedData={mappedData}\n        />\n        <ChartPreview\n          chart={chart}\n          dataset={dataset}\n          dataTypes={dataTypes}\n          mapping={mapping}\n          visualOptions={visualOptions}\n          error={error}\n          setError={setError}\n          setRawViz={setRawViz}\n          mappedData={mappedData}\n        />\n    </Row>\n  )\n}\n\nexport default ChartPreviewWithOptions\n","import React, { useCallback, useState } from 'react'\nimport { InputGroup, DropdownButton, Dropdown } from 'react-bootstrap'\n\nfunction downloadBlob(url, filename) {\n  // Create a new anchor element\n  const a = document.createElement('a')\n  a.href = url\n  a.download = filename || 'download'\n  a.click()\n  return a\n}\n\nexport default function Exporter({ rawViz, exportProject }) {\n  const downloadSvg = useCallback(\n    (filename) => {\n      var svgString = new XMLSerializer().serializeToString(\n        rawViz._node.firstChild\n      )\n      var DOMURL = window.URL || window.webkitURL || window\n      var svg = new Blob([svgString], { type: 'image/svg+xml;charset=utf-8' })\n      var url = DOMURL.createObjectURL(svg)\n      downloadBlob(url, filename)\n      DOMURL.revokeObjectURL(svg)\n    },\n    [rawViz]\n  )\n\n  const downloadImage = useCallback(\n    (format, filename) => {\n      var svgString = new XMLSerializer().serializeToString(\n        rawViz._node.firstChild\n      )\n      var DOMURL = window.URL || window.webkitURL || window\n      var svg = new Blob([svgString], { type: 'image/svg+xml;charset=utf-8' })\n      var url = DOMURL.createObjectURL(svg)\n      var canvas = document.createElement('canvas')\n      canvas.height = rawViz._node.firstChild.clientHeight\n      canvas.width = rawViz._node.firstChild.clientWidth\n      var ctx = canvas.getContext('2d')\n      var img = new Image()\n      img.onload = function () {\n        ctx.drawImage(img, 0, 0)\n        var dataUrl = canvas.toDataURL(format)\n        downloadBlob(dataUrl, filename)\n        DOMURL.revokeObjectURL(svg)\n      }\n      img.src = url\n    },\n    [rawViz]\n  )\n\n  const downloadProject = useCallback(\n    filename => {\n      const project = exportProject()\n      const str = JSON.stringify(project)\n      const blob = new Blob([str], { type: 'application/json' })\n      const DOMURL = window.URL || window.webkitURL || window\n      const url = DOMURL.createObjectURL(blob)\n      downloadBlob(url, filename)\n      DOMURL.revokeObjectURL(url)\n    },\n    [exportProject]\n  )\n\n  const exportFormats = ['svg','png','jpg','rawgraphs'];\n\n  const [currentFormat, setCurrentFormat] = useState('svg')\n  const [currentFile, setCurrentFile] = useState('viz')\n\n  const downloadViz = useCallback(() => {\n    switch (currentFormat) {\n      case 'svg':\n        downloadSvg(`${currentFile}.svg`)\n        break\n      case 'png':\n        downloadImage('image/png', `${currentFile}.png`)\n        break\n      case 'jpg':\n        downloadImage('image/jpeg', `${currentFile}.jpg`)\n        break\n      case 'rawgraphs':\n        downloadProject(`${currentFile}.rawgraphs`)\n        break\n      default:\n        break\n    }\n  }, [currentFile, currentFormat, downloadImage, downloadProject, downloadSvg])\n\n  return (\n    <div className=\"row\">\n      <div className=\"col col-sm-3\">\n        <InputGroup className=\"mb-3 raw-input-group\">\n          <input\n            type=\"text\"\n            className=\"form-control text-field\"\n            value={currentFile}\n            onChange={(e) => setCurrentFile(e.target.value)}\n          ></input>\n          <DropdownButton\n            as={InputGroup.Append}\n            title={`.${currentFormat}`}\n            id=\"input-group-dropdown-1\"\n            className=\"raw-dropdown\"\n          >\n            {exportFormats.map(\n              (d) => {\n                return (\n                  <Dropdown.Item key={d} onClick={() => setCurrentFormat(d)}>\n                    .{d}\n                  </Dropdown.Item>\n                )\n              }\n            )}\n          </DropdownButton>\n        </InputGroup>\n      </div>\n\n      <div className=\"col col-sm-2\">\n        <button className=\"btn btn-primary btn-block raw-btn\" onClick={downloadViz}>\n          Download\n        </button>\n      </div>\n    </div>\n  )\n}\n","import React, { useState, useCallback, useMemo, useEffect, useRef } from 'react'\nimport {\n  getOptionsConfig,\n  getDefaultOptionsValues,\n} from '@rawgraphs/rawgraphs-core'\n\nimport HeaderItems from './HeaderItems'\nimport Header from './components/Header'\nimport Section from './components/Section'\nimport Footer from './components/Footer'\nimport ScreenSizeAlert from './components/ScreenSizeAlert'\n\nimport DataLoader from './components/DataLoader'\nimport charts from './charts'\nimport ChartSelector from './components/ChartSelector'\nimport DataMapping from './components/DataMapping'\nimport ChartPreviewWithOptions from './components/ChartPreviewWIthOptions'\nimport Exporter from './components/Exporter'\nimport get from 'lodash/get'\nimport usePrevious from './hooks/usePrevious'\nimport { serializeProject as serializeProjectV1_1 } from './import_export_v1.1'\nimport useDataLoader from './hooks/useDataLoader'\nimport isPlainObject from 'lodash/isPlainObject'\nimport CookieConsent from \"react-cookie-consent\"\n\n\n// #TODO: i18n\n\nfunction App() {\n  const dataLoader = useDataLoader()\n  const {\n    userInput,\n    userData,\n    userDataType,\n    parseError,\n    unstackedData,\n    unstackedColumns,\n    data,\n    separator,\n    thousandsSeparator,\n    decimalsSeparator,\n    locale,\n    stackDimension,\n    dataSource,\n    loading,\n    hydrateFromSavedProject,\n  } = dataLoader\n\n  /* From here on, we deal with viz state */\n  const [currentChart, setCurrentChart] = useState(null)\n  const [mapping, setMapping] = useState({})\n  const [visualOptions, setVisualOptions] = useState({})\n  const [rawViz, setRawViz] = useState(null)\n  const [mappingLoading, setMappingLoading] = useState(false)\n  const dataMappingRef = useRef(null)\n\n  const columnNames = useMemo(() => {\n    if (get(data, 'dataTypes')) {\n      return Object.keys(data.dataTypes)\n    }\n  }, [data])\n\n  const prevColumnNames = usePrevious(columnNames)\n  const clearLocalMapping = useCallback(() => {\n    if (dataMappingRef.current) {\n      dataMappingRef.current.clearLocalMapping()\n    }\n  }, [])\n\n  //resetting mapping when column names changes (ex: separator change in parsing)\n  useEffect(() => {\n    if (prevColumnNames) {\n      if (!columnNames) {\n        setMapping({})\n        clearLocalMapping()\n      } else {\n        const prevCols = prevColumnNames.join('.')\n        const currentCols = columnNames.join('.')\n        if (prevCols !== currentCols) {\n          setMapping({})\n          clearLocalMapping()\n        }\n      }\n    }\n  }, [columnNames, prevColumnNames, clearLocalMapping])\n\n  const handleChartChange = useCallback((nextChart) => {\n    setMapping({})\n    clearLocalMapping()\n    setCurrentChart(nextChart)\n    const options = getOptionsConfig(nextChart?.visualOptions)\n    setVisualOptions(getDefaultOptionsValues(options))\n    setRawViz(null)\n  }, [clearLocalMapping])\n\n  const exportProject = useCallback(() => {\n    return serializeProjectV1_1(\n      userInput,\n      userData,\n      userDataType,\n      parseError,\n      unstackedData,\n      unstackedColumns,\n      data,\n      separator,\n      thousandsSeparator,\n      decimalsSeparator,\n      locale,\n      stackDimension,\n      dataSource,\n      currentChart,\n      mapping,\n      visualOptions,\n    )\n  }, [\n    currentChart, data, dataSource, decimalsSeparator, locale, mapping,\n    parseError, separator, stackDimension, thousandsSeparator, userData,\n    userDataType, userInput, visualOptions, unstackedColumns, unstackedData\n  ])\n\n  // project import\n  const importProject = useCallback(project => {\n    hydrateFromSavedProject(project)\n    setCurrentChart(project.currentChart)\n    setMapping(project.mapping)\n    // adding \"annotations\" for color scale:\n    // we annotate the incoming options values (complex ones such as color scales)\n    // to le the ui know they are coming from a loaded project\n    // so we don't have to re-evaluate defaults\n    // this is due to the current implementation of the color scale\n    const patchedOptions = {...project.visualOptions}\n    Object.keys(patchedOptions).forEach(k => {\n      if(isPlainObject(patchedOptions[k])){\n        patchedOptions[k].__loaded = true\n      }\n    })\n    setVisualOptions(project.visualOptions)\n  }, [hydrateFromSavedProject])\n\n  //setting initial chart and related options\n  useEffect(() => {\n    setCurrentChart(charts[0])\n    const options = getOptionsConfig(charts[0]?.visualOptions)\n    setVisualOptions(getDefaultOptionsValues(options))\n  }, [])\n\n  return (\n    <div className=\"App\">\n      <Header menuItems={HeaderItems} />\n      <div className=\"app-sections\">\n        <Section title={`1. Load your data`} loading={loading}>\n          <DataLoader\n            {...dataLoader}\n            hydrateFromProject={importProject}\n          />\n        </Section>\n        {data && <Section title=\"2. Choose a chart\">\n          <ChartSelector\n            availableCharts={charts}\n            currentChart={currentChart}\n            setCurrentChart={handleChartChange}\n          />\n        </Section>}\n        {data && currentChart && (\n          <Section title={`3. Mapping`} loading={mappingLoading}>\n            <DataMapping\n              ref={dataMappingRef}\n              dimensions={currentChart.dimensions}\n              dataTypes={data.dataTypes}\n              mapping={mapping}\n              setMapping={setMapping}\n            />\n          </Section>\n        )}\n        {data && currentChart && (\n          <Section title=\"4. Customize\">\n            <ChartPreviewWithOptions\n              chart={currentChart}\n              dataset={data.dataset}\n              dataTypes={data.dataTypes}\n              mapping={mapping}\n              visualOptions={visualOptions}\n              setVisualOptions={setVisualOptions}\n              setRawViz={setRawViz}\n              setMappingLoading={setMappingLoading}\n            />\n          </Section>\n        )}\n        {data && currentChart && rawViz && (\n          <Section title=\"5. Export\">\n            <Exporter rawViz={rawViz} exportProject={exportProject} />\n          </Section>\n        )}\n        <Footer />\n        <CookieConsent\n        location=\"bottom\"\n        buttonText=\"Got it!\"\n        style={{ background: \"#f5f5f5\", color: \"#646467\" }}\n        buttonStyle={{\n          background: \"#646467\",\n          color: \"white\",\n          fontSize: \"13px\",\n          borderRadius: \"3px\",\n          padding: \"5px 20px\",\n        }}\n        buttonClasses=\"btn btn-default btn-grey\"\n        acceptOnScroll={true}\n      >\n        This website uses Google Analytics to anonymously collect browsing data.{\" \"}\n        <a\n          href=\"https://rawgraphs.io/privacy/\"\n          target=\"_blank\"\n          rel=\"noopener noreferrer\"\n          className=\"ml-2 text-body border-bottom border-dark\"\n        >\n          Learn More\n        </a>\n      </CookieConsent>\n      </div>\n      <ScreenSizeAlert />\n    </div>\n  )\n}\n\nexport default App\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n)\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href)\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config)\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          )\n        })\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config)\n      }\n    })\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then((registration) => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing\n        if (installingWorker == null) {\n          return\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              )\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration)\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.')\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration)\n              }\n            }\n          }\n        }\n      }\n    })\n    .catch((error) => {\n      console.error('Error during service worker registration:', error)\n    })\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then((response) => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type')\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then((registration) => {\n          registration.unregister().then(() => {\n            window.location.reload()\n          })\n        })\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config)\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      )\n    })\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then((registration) => {\n        registration.unregister()\n      })\n      .catch((error) => {\n        console.error(error.message)\n      })\n  }\n}\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport './styles/index.scss'\nimport App from './App'\nimport * as serviceWorker from './serviceWorker'\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n)\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister()\n"],"sourceRoot":""}